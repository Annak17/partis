#!/usr/bin/env python
import argparse
import os
from subprocess import check_call

parser = argparse.ArgumentParser()
parser.add_argument('--infname', required=True)
parser.add_argument('--outfname')
args = parser.parse_args()
if not os.path.exists(args.infname):
    raise Exception('input file \"%s\" does not exist' % args.infname)
if args.outfname is None:
    args.outfname = args.infname[ : args.infname.rfind('.')] + '.csv'

def run(cmd):
    print 'RUN %s' % cmd
    check_call(cmd.split())

# use the basename, without suffix, of <args.infname> as a label for the analysis
label = os.path.basename(args.infname[ : args.infname.rfind('.')])

# cache parameters based on the sequences in <args.infname>
cmd = './bin/partis.py --action cache-parameters --seqfile ' + args.infname + ' --is-data --parameter-dir ' + os.getcwd() + '/_tmp/' + label
run(cmd)

# use the cached parameters to annotate the sequences in <args.infname>
cmd = './bin/partis.py --action run-viterbi --seqfile ' + args.infname + ' --is-data --parameter-dir ' + os.getcwd() + '/_tmp/' + label + '/hmm --outfname ' + args.outfname
run(cmd)

print 'output written to %s' % args.outfname
