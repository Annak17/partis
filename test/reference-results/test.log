TEST              annotate-ref-simu   ./bin/partis.py --action run-viterbi --plotdir test/_new-results/simu-ref-performance --plot-performance --is-simu --seqfile test/reference-results/test/simu.csv --parameter-dir test/reference-results/test/parameters/simu/hmm --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --outfname test/_new-results/annotate-ref-simu.csv
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
   adding placeholder alignments for missing genes [91mj[0m[95m1P[0m[93m01[0m [91mj[0m[95m2P[0m[93m01[0m [91mj[0m[95m3P[0m[93m01[0m [91mj[0m[95m3P[0m[93m02[0m
smith-waterman
    rewriting germlines from /home/dralph/work/partis-dev/data/imgt to /tmp/dralph/hmms/180993/germline-sets (using 26 genes)
        processed       remaining      new-indels          rerun: unproductive      no-match      weird-annot.      nonsense-bounds      invalid-codon
           997             178              0                          70              85              23               0               0             increasing mismatch score (1 --> 2) and rerunning them
           178              10              3                           0               5               0               2               0             rerunning for indels
    skipping performance evaluation of 7534029448258028519 because of indels
    skipping performance evaluation of 6387888212624103929 because of indels
            10               6              0                           0               6               0               0               0             increasing mismatch score (2 --> 3) and rerunning them
/usr/lib/pymodules/python2.7/matplotlib/pyplot.py:412: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_num_figures`).
  max_open_warning, RuntimeWarning)
             6               1              0                           0               1               0               0               0             increasing mismatch score (3 --> 4) and rerunning them
  v_gene
    correct up to allele:  921 / 994  = 0.9266 (-0.918, +0.934)
  d_gene
    correct up to allele:  813 / 994  = 0.8179 (-0.805, +0.829)
  j_gene
    correct up to allele:  893 / 994  = 0.8984 (-0.888, +0.907)
      info for 996      (skipped 0 / 997 = 0.000 unproductive    1 / 997 = 0.001 other ) 
   [91mwarning[0m 1 missing annotations (-8821941325994925903)
hmm
    writing input
    running
      hmm run time: 19.173
    time to merge csv files: 0.024
    read output
    skipping performance evaluation of 7534029448258028519 because of indels
    skipping performance evaluation of 6387888212624103929 because of indels
  v_gene
    correct up to allele:  824 / 994  = 0.8290 (-0.817, +0.840)
  d_gene
    correct up to allele:  845 / 994  = 0.8501 (-0.838, +0.860)
  j_gene
    correct up to allele:  945 / 994  = 0.9507 (-0.943, +0.956)
    processed 996 sequences in 996 events (0 invalid events)
      1 boundary errors
missing 1 input keys
      total time: 50.291
TEST              annotate-ref-data   ./bin/partis.py --action run-viterbi --n-max-queries 50 --seqfile test/mishmash.fa --parameter-dir test/reference-results/test/parameters/data/hmm --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --outfname test/_new-results/annotate-ref-data.csv
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
   adding placeholder alignments for missing genes [91mj[0m[95m1P[0m[93m01[0m [91mj[0m[95m2P[0m[93m01[0m [91mj[0m[95m3P[0m[93m01[0m [91mj[0m[95m3P[0m[93m02[0m
smith-waterman
    rewriting germlines from /home/dralph/work/partis-dev/data/imgt to /tmp/dralph/hmms/97695/germline-sets (using 26 genes)
        processed       remaining      new-indels          rerun: unproductive      no-match      weird-annot.      nonsense-bounds      invalid-codon
            49              14              0                           4               9               1               0               0             increasing mismatch score (1 --> 2) and rerunning them
            14               7              5                           0               1               0               1               0             rerunning for indels
             7               2              0                           0               1               0               0               1             increasing mismatch score (2 --> 3) and rerunning them
             2               1              0                           0               0               0               0               1             increasing mismatch score (3 --> 4) and rerunning them
      info for 48      (skipped 0 / 49 = 0.000 unproductive    1 / 49 = 0.020 other ) 
   [91mwarning[0m 1 missing annotations (crap-3)
hmm
    writing input
    running
      hmm run time: 4.090
    time to merge csv files: 0.015
    read output
    processed 47 sequences in 47 events (1 invalid events)
missing 2 input keys
      total time: 19.058
TEST             partition-ref-simu   ./bin/partis.py --action partition --n-max-queries 250 --persistent-cachefname test/_new-results/cache-ref-partition.csv --n-precache-procs 10 --is-simu --seqfile test/reference-results/test/simu.csv --parameter-dir test/reference-results/test/parameters/simu/hmm --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --outfname test/_new-results/partition-ref-simu.csv
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
   adding placeholder alignments for missing genes [91mj[0m[95m1P[0m[93m01[0m [91mj[0m[95m2P[0m[93m01[0m [91mj[0m[95m3P[0m[93m01[0m [91mj[0m[95m3P[0m[93m02[0m
smith-waterman
    rewriting germlines from /home/dralph/work/partis-dev/data/imgt to /tmp/dralph/hmms/858706/germline-sets (using 26 genes)
        processed       remaining      new-indels          rerun: unproductive      no-match      weird-annot.      nonsense-bounds      invalid-codon
           250              40              0                          19              17               4               0               0             increasing mismatch score (1 --> 2) and rerunning them
            40               2              0                           0               2               0               0               0             increasing mismatch score (2 --> 3) and rerunning them
             2         all done
      info for 250 
        water time: 11.250
    precache procs 10
hmm
    writing input
      caching all naive sequences
    running
      --> proc 3
        cachefile d.n.e.
        time 6.91357
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 5
        cachefile d.n.e.
        time 6.981
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 0
        cachefile d.n.e.
        time 7.82809
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 2
        cachefile d.n.e.
        time 7.59954
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 4
        cachefile d.n.e.
        time 7.34793
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 6
        cachefile d.n.e.
        time 7.62315
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 7
        cachefile d.n.e.
        time 7.1802
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 8
        cachefile d.n.e.
        time 7.17976
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 1
        cachefile d.n.e.
        time 8.05073
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 9
        cachefile d.n.e.
        time 8.10784
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      hmm run time: 10.110
    time to merge csv files: 0.019
--> 250 clusters with 10 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.015 0.109
    running
      --> proc 6
        read 250 cached logprobs and 250 naive seqs
        stopping after drop -9741.96 --> -9768.26
        time 2.6884
         calculated   vtb 3      fwd 5      hamming merged 5      naive hfracs 386

      --> proc 9
        read 250 cached logprobs and 250 naive seqs
        stopping after drop -8185.45 --> -8210.88
        time 2.30632
         calculated   vtb 3      fwd 6      hamming merged 5      naive hfracs 386

      --> proc 2
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 247   small lratios: 6   total: 253
        time 3.07448
         calculated   vtb 1      fwd 8      hamming merged 2      naive hfracs 345

      --> proc 4
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 201   small lratios: 9   total: 210
        time 3.24631
         calculated   vtb 2      fwd 14     hamming merged 3      naive hfracs 386

      --> proc 7
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 292   small lratios: 8   total: 300
        time 3.00242
         calculated   vtb 0      fwd 8      hamming merged 0      naive hfracs 300

      --> proc 0
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 203   small lratios: 7   total: 210
        time 4.30903
         calculated   vtb 2      fwd 13     hamming merged 4      naive hfracs 386

      --> proc 3
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 223   small lratios: 8   total: 231
        time 4.68317
         calculated   vtb 2      fwd 12     hamming merged 2      naive hfracs 366

      --> proc 5
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 202   small lratios: 8   total: 210
        time 4.362
         calculated   vtb 2      fwd 12     hamming merged 3      naive hfracs 386

      --> proc 1
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 239   small lratios: 14   total: 253
        time 7.41608
         calculated   vtb 2      fwd 20     hamming merged 1      naive hfracs 345

      --> proc 8
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 199   small lratios: 11   total: 210
        time 8.01919
         calculated   vtb 2      fwd 20     hamming merged 3      naive hfracs 386

      hmm run time: 10.093
    time to merge csv files: 0.018
  merged path 0 with 34 glomeration steps and 217 final clusters
        read cached glomeration time: 0.024
      partition step time: 10.647
--> 222 clusters with 7 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.015 0.109
    running
      --> proc 1
        read 368 cached logprobs and 283 naive seqs
        stopping after drop -13927.7 --> -14028.8
        time 2.38915
         calculated   vtb 2      fwd 4      hamming merged 2      naive hfracs 526

      --> proc 3
        read 368 cached logprobs and 283 naive seqs
        stopping after drop -11299.7 --> -11329.1
        time 2.91177
         calculated   vtb 2      fwd 10     hamming merged 3      naive hfracs 555

      --> proc 6
        read 368 cached logprobs and 283 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 318   small lratios: 7   total: 325
        time 4.87709
         calculated   vtb 5      fwd 13     hamming merged 5      naive hfracs 600

      --> proc 5
        read 368 cached logprobs and 283 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 364   small lratios: 14   total: 378
        time 5.63723
         calculated   vtb 2      fwd 20     hamming merged 3      naive hfracs 549

      --> proc 0
        read 368 cached logprobs and 283 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 416   small lratios: 19   total: 435
        time 6.56884
         calculated   vtb 1      fwd 19     hamming merged 2      naive hfracs 555

      --> proc 2
        read 368 cached logprobs and 283 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 293   small lratios: 7   total: 300
        time 7.09778
         calculated   vtb 4      fwd 17     hamming merged 6      naive hfracs 685

      --> proc 4
        read 368 cached logprobs and 283 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 332   small lratios: 19   total: 351
        time 8.88038
         calculated   vtb 4      fwd 23     hamming merged 3      naive hfracs 636

      hmm run time: 10.083
    time to merge csv files: 0.017
  merged path 0 with 28 glomeration steps and 195 final clusters
        read cached glomeration time: 0.017
      partition step time: 10.532
--> 199 clusters with 5 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.015 0.109
    running
      --> proc 4
        read 474 cached logprobs and 310 naive seqs
        stopping after drop -17217.3 --> -17243.6
        time 3.25838
         calculated   vtb 1      fwd 9      hamming merged 4      naive hfracs 849

      --> proc 0
        read 474 cached logprobs and 310 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 543   small lratios: 18   total: 561
        time 7.68685
         calculated   vtb 3      fwd 25     hamming merged 6      naive hfracs 993

      --> proc 2
        read 474 cached logprobs and 310 naive seqs
        stopping after drop -18674.7 --> -18684.5
        time 7.10285
         calculated   vtb 4      fwd 24     hamming merged 5      naive hfracs 926

      --> proc 3
        read 474 cached logprobs and 310 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 577   small lratios: 18   total: 595
        time 8.10581
         calculated   vtb 2      fwd 25     hamming merged 4      naive hfracs 960

      --> proc 1
        read 474 cached logprobs and 310 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 570   small lratios: 25   total: 595
        time 11.1212
         calculated   vtb 3      fwd 36     hamming merged 5      naive hfracs 960

      hmm run time: 13.062
    time to merge csv files: 0.018
  merged path 0 with 26 glomeration steps and 174 final clusters
        read cached glomeration time: 0.144
      partition step time: 13.650
--> 177 clusters with 3 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.015 0.109
    running
      --> proc 2
        read 593 cached logprobs and 334 naive seqs
        stopping after drop -30601.9 --> -30729.2
        time 2.92456
         calculated   vtb 2      fwd 8      hamming merged 5      naive hfracs 1933

      --> proc 1
        read 593 cached logprobs and 334 naive seqs
        stopping after drop -26947 --> -27082.5
        time 5.68117
         calculated   vtb 3      fwd 17     hamming merged 6      naive hfracs 1986

      --> proc 0
        read 593 cached logprobs and 334 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 1138   small lratios: 38   total: 1176
        time 21.9702
         calculated   vtb 4      fwd 57     hamming merged 8      naive hfracs 2236

      hmm run time: 24.058
    time to merge csv files: 0.017
  merged path 0 with 22 glomeration steps and 156 final clusters
        read cached glomeration time: 0.011
      partition step time: 24.481
--> 160 clusters with 2 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.015 0.109
    running
      --> proc 1
        read 675 cached logprobs and 355 naive seqs
        stopping after drop -44833.2 --> -44968.7
        time 12.5614
         calculated   vtb 2      fwd 39     hamming merged 10     naive hfracs 3826

      --> proc 0
        read 675 cached logprobs and 355 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 2092   small lratios: 53   total: 2145
        time 27.6777
         calculated   vtb 11     fwd 79     hamming merged 12     naive hfracs 4161

      hmm run time: 29.047
    time to merge csv files: 0.019
  merged path 0 with 25 glomeration steps and 136 final clusters
        read cached glomeration time: 0.014
      partition step time: 29.472
--> 138 clusters with 1 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.015 0.109
    running
        read 793 cached logprobs and 376 naive seqs
        stopping after drop -88827.7 --> -88944.3
        time 9.13931
         calculated   vtb 6      fwd 23     hamming merged 16     naive hfracs 11388
‘test/_new-results/cache-ref-partition.csv.tmp’ -> ‘test/_new-results/cache-ref-partition.csv’
      hmm run time: 9.253
  merged path 0 with 17 glomeration steps and 122 final clusters
        read cached glomeration time: 0.005
      partition step time: 9.609
      loop time: 98.392
    checking partition with 250 ids
      looking for 250 ids from input info
      check time: 0.002
      write time: 0.011
    time to merge csv files: 0.064
      total time: 121.852
TEST       point-partition-ref-simu   ./bin/partis.py --action partition --naive-hamming --n-max-queries 250 --n-precache-procs 10 --is-simu --seqfile test/reference-results/test/simu.csv --parameter-dir test/reference-results/test/parameters/simu/hmm --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --outfname test/_new-results/point-partition-ref-simu.csv
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
   adding placeholder alignments for missing genes [91mj[0m[95m1P[0m[93m01[0m [91mj[0m[95m2P[0m[93m01[0m [91mj[0m[95m3P[0m[93m01[0m [91mj[0m[95m3P[0m[93m02[0m
smith-waterman
    rewriting germlines from /home/dralph/work/partis-dev/data/imgt to /tmp/dralph/hmms/569220/germline-sets (using 26 genes)
        processed       remaining      new-indels          rerun: unproductive      no-match      weird-annot.      nonsense-bounds      invalid-codon
           250              40              0                          19              17               4               0               0             increasing mismatch score (1 --> 2) and rerunning them
            40               2              0                           0               2               0               0               0             increasing mismatch score (2 --> 3) and rerunning them
             2         all done
      info for 250 
        water time: 10.248
    precache procs 10
hmm
    writing input
      caching all naive sequences
    running
      --> proc 3
        cachefile d.n.e.
        time 3.81053
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 5
        cachefile d.n.e.
        time 3.80625
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 0
        cachefile d.n.e.
        time 4.52938
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 1
        cachefile d.n.e.
        time 4.53148
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 2
        cachefile d.n.e.
        time 4.34624
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 4
        cachefile d.n.e.
        time 4.03774
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 6
        cachefile d.n.e.
        time 4.16438
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 7
        cachefile d.n.e.
        time 4.1359
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 8
        cachefile d.n.e.
        time 4.02581
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 9
        cachefile d.n.e.
        time 4.63403
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      hmm run time: 6.104
    time to merge csv files: 0.017
--> 250 clusters with 10 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.045 0.045
    running
      --> proc 2
        read 0 cached logprobs and 250 naive seqs
        stop with all 231 / 231 hamming distances greater than 0.0452532
        time 1.02653
         calculated   vtb 2      fwd 0      hamming merged 3      naive hfracs 366

      --> proc 7
        read 0 cached logprobs and 250 naive seqs
        stop with all 300 / 300 hamming distances greater than 0.0452532
        time 0.06903
         calculated   vtb 0      fwd 0      hamming merged 0      naive hfracs 300

      --> proc 0
        read 0 cached logprobs and 250 naive seqs
        stop with all 171 / 171 hamming distances greater than 0.0452532
        time 1.66804
         calculated   vtb 4      fwd 0      hamming merged 6      naive hfracs 423

      --> proc 3
        read 0 cached logprobs and 250 naive seqs
        stop with all 210 / 210 hamming distances greater than 0.0452532
        time 1.36069
         calculated   vtb 3      fwd 0      hamming merged 4      naive hfracs 386

      --> proc 4
        read 0 cached logprobs and 250 naive seqs
        stop with all 171 / 171 hamming distances greater than 0.0452532
        time 1.22047
         calculated   vtb 4      fwd 0      hamming merged 6      naive hfracs 423

      --> proc 5
        read 0 cached logprobs and 250 naive seqs
        stop with all 153 / 153 hamming distances greater than 0.0452532
        time 1.94508
         calculated   vtb 5      fwd 0      hamming merged 7      naive hfracs 440

      --> proc 6
        read 0 cached logprobs and 250 naive seqs
        stop with all 171 / 171 hamming distances greater than 0.0452532
        time 1.57096
         calculated   vtb 4      fwd 0      hamming merged 6      naive hfracs 423

      --> proc 8
        read 0 cached logprobs and 250 naive seqs
        stop with all 190 / 190 hamming distances greater than 0.0452532
        time 1.88333
         calculated   vtb 3      fwd 0      hamming merged 5      naive hfracs 405

      --> proc 9
        read 0 cached logprobs and 250 naive seqs
        stop with all 171 / 171 hamming distances greater than 0.0452532
        time 1.37058
         calculated   vtb 4      fwd 0      hamming merged 6      naive hfracs 423

      --> proc 1
        read 0 cached logprobs and 250 naive seqs
        stop with all 190 / 190 hamming distances greater than 0.0452532
        time 2.54306
         calculated   vtb 5      fwd 0      hamming merged 5      naive hfracs 405

      hmm run time: 4.101
    time to merge csv files: 0.015
  merged path 0 with 49 glomeration steps and 202 final clusters
        read cached glomeration time: 0.024
      partition step time: 4.660
--> 202 clusters with 7 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.045 0.045
    running
      --> proc 0
        read 0 cached logprobs and 298 naive seqs
        stop with all 253 / 253 hamming distances greater than 0.0452532
        time 1.27587
         calculated   vtb 1      fwd 0      hamming merged 6      naive hfracs 553

      --> proc 2
        read 0 cached logprobs and 298 naive seqs
        stop with all 276 / 276 hamming distances greater than 0.0452532
        time 1.96871
         calculated   vtb 3      fwd 0      hamming merged 5      naive hfracs 531

      --> proc 4
        read 0 cached logprobs and 298 naive seqs
        stop with all 325 / 325 hamming distances greater than 0.0452532
        time 1.75552
         calculated   vtb 2      fwd 0      hamming merged 3      naive hfracs 484

      --> proc 6
        read 0 cached logprobs and 298 naive seqs
        stop with all 300 / 300 hamming distances greater than 0.0452532
        time 1.19752
         calculated   vtb 2      fwd 0      hamming merged 3      naive hfracs 453

      --> proc 3
        read 0 cached logprobs and 298 naive seqs
        stop with all 300 / 300 hamming distances greater than 0.0452532
        time 2.46845
         calculated   vtb 4      fwd 0      hamming merged 4      naive hfracs 508

      --> proc 5
        read 0 cached logprobs and 298 naive seqs
        stop with all 253 / 253 hamming distances greater than 0.0452532
        time 2.90618
         calculated   vtb 6      fwd 0      hamming merged 6      naive hfracs 553

      --> proc 1
        read 0 cached logprobs and 298 naive seqs
        stop with all 325 / 325 hamming distances greater than 0.0452532
        time 3.17888
         calculated   vtb 2      fwd 0      hamming merged 3      naive hfracs 484

      hmm run time: 5.065
    time to merge csv files: 0.015
  merged path 0 with 31 glomeration steps and 172 final clusters
        read cached glomeration time: 0.013
      partition step time: 5.532
--> 172 clusters with 5 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.045 0.045
    running
      --> proc 0
        read 0 cached logprobs and 328 naive seqs
        stop with all 465 / 465 hamming distances greater than 0.0452532
        time 1.36171
         calculated   vtb 3      fwd 0      hamming merged 4      naive hfracs 721

      --> proc 2
        read 0 cached logprobs and 328 naive seqs
        stop with all 465 / 465 hamming distances greater than 0.0452532
        time 1.37557
         calculated   vtb 2      fwd 0      hamming merged 3      naive hfracs 654

      --> proc 3
        read 0 cached logprobs and 328 naive seqs
        stop with all 378 / 378 hamming distances greater than 0.0452532
        time 1.47233
         calculated   vtb 2      fwd 0      hamming merged 6      naive hfracs 738

      --> proc 4
        read 0 cached logprobs and 328 naive seqs
        stop with all 406 / 406 hamming distances greater than 0.0452532
        time 2.12226
         calculated   vtb 4      fwd 0      hamming merged 5      naive hfracs 711

      --> proc 1
        read 0 cached logprobs and 328 naive seqs
        stop with all 435 / 435 hamming distances greater than 0.0452532
        time 3.69211
         calculated   vtb 5      fwd 0      hamming merged 5      naive hfracs 750

      hmm run time: 5.052
    time to merge csv files: 0.015
  merged path 0 with 24 glomeration steps and 149 final clusters
        read cached glomeration time: 0.114
      partition step time: 5.616
--> 149 clusters with 3 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.045 0.045
    running
      --> proc 0
        read 0 cached logprobs and 351 naive seqs
        stop with all 861 / 861 hamming distances greater than 0.0452532
        time 1.72912
         calculated   vtb 3      fwd 0      hamming merged 8      naive hfracs 1581

      --> proc 1
        read 0 cached logprobs and 351 naive seqs
        stop with all 946 / 946 hamming distances greater than 0.0452532
        time 2.3615
         calculated   vtb 4      fwd 0      hamming merged 6      naive hfracs 1498

      --> proc 2
        read 0 cached logprobs and 351 naive seqs
        stop with all 861 / 861 hamming distances greater than 0.0452532
        time 2.53022
         calculated   vtb 5      fwd 0      hamming merged 7      naive hfracs 1484

      hmm run time: 4.031
    time to merge csv files: 0.015
  merged path 0 with 22 glomeration steps and 128 final clusters
        read cached glomeration time: 0.008
      partition step time: 4.447
--> 128 clusters with 2 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.045 0.045
    running
      --> proc 0
        read 0 cached logprobs and 372 naive seqs
        stop with all 1711 / 1711 hamming distances greater than 0.0452532
        time 2.37189
         calculated   vtb 4      fwd 0      hamming merged 5      naive hfracs 2316

      --> proc 1
        read 0 cached logprobs and 372 naive seqs
        stop with all 1326 / 1326 hamming distances greater than 0.0452532
        time 3.31315
         calculated   vtb 6      fwd 0      hamming merged 12     naive hfracs 2694

      hmm run time: 5.022
    time to merge csv files: 0.014
  merged path 0 with 18 glomeration steps and 111 final clusters
        read cached glomeration time: 0.007
      partition step time: 5.426
--> 111 clusters with 1 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.045 0.045
    running
        read 0 cached logprobs and 389 naive seqs
        stop with all 4186 / 4186 hamming distances greater than 0.0452532
        time 4.75602
         calculated   vtb 13     fwd 0      hamming merged 19     naive hfracs 8005
      hmm run time: 4.840
  merged path 0 with 20 glomeration steps and 92 final clusters
        read cached glomeration time: 0.004
      partition step time: 5.193
      loop time: 30.875
    checking partition with 250 ids
      looking for 250 ids from input info
      check time: 0.001
      write time: 0.009
      total time: 49.022
TEST     vsearch-partition-ref-simu   ./bin/partis.py --action partition --naive-vsearch --n-max-queries 250 --n-precache-procs 10 --is-simu --seqfile test/reference-results/test/simu.csv --parameter-dir test/reference-results/test/parameters/simu/hmm --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --outfname test/_new-results/vsearch-partition-ref-simu.csv
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
   adding placeholder alignments for missing genes [91mj[0m[95m1P[0m[93m01[0m [91mj[0m[95m2P[0m[93m01[0m [91mj[0m[95m3P[0m[93m01[0m [91mj[0m[95m3P[0m[93m02[0m
smith-waterman
    rewriting germlines from /home/dralph/work/partis-dev/data/imgt to /tmp/dralph/hmms/381395/germline-sets (using 26 genes)
        processed       remaining      new-indels          rerun: unproductive      no-match      weird-annot.      nonsense-bounds      invalid-codon
           250              40              0                          19              17               4               0               0             increasing mismatch score (1 --> 2) and rerunning them
            40               2              0                           0               2               0               0               0             increasing mismatch score (2 --> 3) and rerunning them
             2         all done
      info for 250 
        water time: 10.229
    precache procs 10
hmm
    writing input
      caching all naive sequences
    running
      --> proc 0
        cachefile d.n.e.
        time 7.80193
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 3
        cachefile d.n.e.
        time 7.41374
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 4
        cachefile d.n.e.
        time 7.78277
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 5
        cachefile d.n.e.
        time 7.29849
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 6
        cachefile d.n.e.
        time 7.50484
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 7
        cachefile d.n.e.
        time 7.31272
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 8
        cachefile d.n.e.
        time 7.66789
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 1
        cachefile d.n.e.
        time 8.10101
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 2
        cachefile d.n.e.
        time 8.08062
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 9
        cachefile d.n.e.
        time 8.17714
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      hmm run time: 10.115
    time to merge csv files: 0.016
  auto hamming bounds:
      0.112 mutation in test/reference-results/test/parameters/simu/hmm
       naive hamming bounds: 0.032 0.032
    using hfrac bound for vsearch 0.032
  out:
    vsearch v1.1.3_linux_x86_64, 62.8GB RAM, 16 cores
    https://github.com/torognes/vsearch
    
    
  err:
    Reading file /tmp/dralph/hmms/381395/simu.fasta 0%  Reading file /tmp/dralph/hmms/381395/simu.fasta 0%  Reading file /tmp/dralph/hmms/381395/simu.fasta 1%  Reading file /tmp/dralph/hmms/381395/simu.fasta 2%  Reading file /tmp/dralph/hmms/381395/simu.fasta 3%  Reading file /tmp/dralph/hmms/381395/simu.fasta 4%  Reading file /tmp/dralph/hmms/381395/simu.fasta 4%  Reading file /tmp/dralph/hmms/381395/simu.fasta 5%  Reading file /tmp/dralph/hmms/381395/simu.fasta 6%  Reading file /tmp/dralph/hmms/381395/simu.fasta 7%  Reading file /tmp/dralph/hmms/381395/simu.fasta 8%  Reading file /tmp/dralph/hmms/381395/simu.fasta 8%  Reading file /tmp/dralph/hmms/381395/simu.fasta 9%  Reading file /tmp/dralph/hmms/381395/simu.fasta 10%  Reading file /tmp/dralph/hmms/381395/simu.fasta 11%  Reading file /tmp/dralph/hmms/381395/simu.fasta 12%  Reading file /tmp/dralph/hmms/381395/simu.fasta 12%  Reading file /tmp/dralph/hmms/381395/simu.fasta 13%  Reading file /tmp/dralph/hmms/381395/simu.fasta 14%  Reading file /tmp/dralph/hmms/381395/simu.fasta 15%  Reading file /tmp/dralph/hmms/381395/simu.fasta 16%  Reading file /tmp/dralph/hmms/381395/simu.fasta 16%  Reading file /tmp/dralph/hmms/381395/simu.fasta 17%  Reading file /tmp/dralph/hmms/381395/simu.fasta 18%  Reading file /tmp/dralph/hmms/381395/simu.fasta 19%  Reading file /tmp/dralph/hmms/381395/simu.fasta 20%  Reading file /tmp/dralph/hmms/381395/simu.fasta 20%  Reading file /tmp/dralph/hmms/381395/simu.fasta 21%  Reading file /tmp/dralph/hmms/381395/simu.fasta 22%  Reading file /tmp/dralph/hmms/381395/simu.fasta 23%  Reading file /tmp/dralph/hmms/381395/simu.fasta 24%  Reading file /tmp/dralph/hmms/381395/simu.fasta 24%  Reading file /tmp/dralph/hmms/381395/simu.fasta 25%  Reading file /tmp/dralph/hmms/381395/simu.fasta 26%  Reading file /tmp/dralph/hmms/381395/simu.fasta 27%  Reading file /tmp/dralph/hmms/381395/simu.fasta 28%  Reading file /tmp/dralph/hmms/381395/simu.fasta 28%  Reading file /tmp/dralph/hmms/381395/simu.fasta 29%  Reading file /tmp/dralph/hmms/381395/simu.fasta 30%  Reading file /tmp/dralph/hmms/381395/simu.fasta 31%  Reading file /tmp/dralph/hmms/381395/simu.fasta 32%  Reading file /tmp/dralph/hmms/381395/simu.fasta 32%  Reading file /tmp/dralph/hmms/381395/simu.fasta 33%  Reading file /tmp/dralph/hmms/381395/simu.fasta 34%  Reading file /tmp/dralph/hmms/381395/simu.fasta 35%  Reading file /tmp/dralph/hmms/381395/simu.fasta 36%  Reading file /tmp/dralph/hmms/381395/simu.fasta 36%  Reading file /tmp/dralph/hmms/381395/simu.fasta 37%  Reading file /tmp/dralph/hmms/381395/simu.fasta 38%  Reading file /tmp/dralph/hmms/381395/simu.fasta 39%  Reading file /tmp/dralph/hmms/381395/simu.fasta 40%  Reading file /tmp/dralph/hmms/381395/simu.fasta 40%  Reading file /tmp/dralph/hmms/381395/simu.fasta 41%  Reading file /tmp/dralph/hmms/381395/simu.fasta 42%  Reading file /tmp/dralph/hmms/381395/simu.fasta 43%  Reading file /tmp/dralph/hmms/381395/simu.fasta 44%  Reading file /tmp/dralph/hmms/381395/simu.fasta 44%  Reading file /tmp/dralph/hmms/381395/simu.fasta 45%  Reading file /tmp/dralph/hmms/381395/simu.fasta 46%  Reading file /tmp/dralph/hmms/381395/simu.fasta 47%  Reading file /tmp/dralph/hmms/381395/simu.fasta 48%  Reading file /tmp/dralph/hmms/381395/simu.fasta 48%  Reading file /tmp/dralph/hmms/381395/simu.fasta 49%  Reading file /tmp/dralph/hmms/381395/simu.fasta 50%  Reading file /tmp/dralph/hmms/381395/simu.fasta 51%  Reading file /tmp/dralph/hmms/381395/simu.fasta 52%  Reading file /tmp/dralph/hmms/381395/simu.fasta 52%  Reading file /tmp/dralph/hmms/381395/simu.fasta 53%  Reading file /tmp/dralph/hmms/381395/simu.fasta 54%  Reading file /tmp/dralph/hmms/381395/simu.fasta 55%  Reading file /tmp/dralph/hmms/381395/simu.fasta 56%  Reading file /tmp/dralph/hmms/381395/simu.fasta 56%  Reading file /tmp/dralph/hmms/381395/simu.fasta 57%  Reading file /tmp/dralph/hmms/381395/simu.fasta 58%  Reading file /tmp/dralph/hmms/381395/simu.fasta 59%  Reading file /tmp/dralph/hmms/381395/simu.fasta 60%  Reading file /tmp/dralph/hmms/381395/simu.fasta 60%  Reading file /tmp/dralph/hmms/381395/simu.fasta 61%  Reading file /tmp/dralph/hmms/381395/simu.fasta 62%  Reading file /tmp/dralph/hmms/381395/simu.fasta 63%  Reading file /tmp/dralph/hmms/381395/simu.fasta 64%  Reading file /tmp/dralph/hmms/381395/simu.fasta 64%  Reading file /tmp/dralph/hmms/381395/simu.fasta 65%  Reading file /tmp/dralph/hmms/381395/simu.fasta 66%  Reading file /tmp/dralph/hmms/381395/simu.fasta 67%  Reading file /tmp/dralph/hmms/381395/simu.fasta 68%  Reading file /tmp/dralph/hmms/381395/simu.fasta 68%  Reading file /tmp/dralph/hmms/381395/simu.fasta 69%  Reading file /tmp/dralph/hmms/381395/simu.fasta 70%  Reading file /tmp/dralph/hmms/381395/simu.fasta 71%  Reading file /tmp/dralph/hmms/381395/simu.fasta 72%  Reading file /tmp/dralph/hmms/381395/simu.fasta 72%  Reading file /tmp/dralph/hmms/381395/simu.fasta 73%  Reading file /tmp/dralph/hmms/381395/simu.fasta 74%  Reading file /tmp/dralph/hmms/381395/simu.fasta 75%  Reading file /tmp/dralph/hmms/381395/simu.fasta 76%  Reading file /tmp/dralph/hmms/381395/simu.fasta 76%  Reading file /tmp/dralph/hmms/381395/simu.fasta 77%  Reading file /tmp/dralph/hmms/381395/simu.fasta 78%  Reading file /tmp/dralph/hmms/381395/simu.fasta 79%  Reading file /tmp/dralph/hmms/381395/simu.fasta 80%  Reading file /tmp/dralph/hmms/381395/simu.fasta 80%  Reading file /tmp/dralph/hmms/381395/simu.fasta 81%  Reading file /tmp/dralph/hmms/381395/simu.fasta 82%  Reading file /tmp/dralph/hmms/381395/simu.fasta 83%  Reading file /tmp/dralph/hmms/381395/simu.fasta 84%  Reading file /tmp/dralph/hmms/381395/simu.fasta 84%  Reading file /tmp/dralph/hmms/381395/simu.fasta 85%  Reading file /tmp/dralph/hmms/381395/simu.fasta 86%  Reading file /tmp/dralph/hmms/381395/simu.fasta 87%  Reading file /tmp/dralph/hmms/381395/simu.fasta 88%  Reading file /tmp/dralph/hmms/381395/simu.fasta 88%  Reading file /tmp/dralph/hmms/381395/simu.fasta 89%  Reading file /tmp/dralph/hmms/381395/simu.fasta 90%  Reading file /tmp/dralph/hmms/381395/simu.fasta 91%  Reading file /tmp/dralph/hmms/381395/simu.fasta 92%  Reading file /tmp/dralph/hmms/381395/simu.fasta 92%  Reading file /tmp/dralph/hmms/381395/simu.fasta 93%  Reading file /tmp/dralph/hmms/381395/simu.fasta 94%  Reading file /tmp/dralph/hmms/381395/simu.fasta 95%  Reading file /tmp/dralph/hmms/381395/simu.fasta 96%  Reading file /tmp/dralph/hmms/381395/simu.fasta 96%  Reading file /tmp/dralph/hmms/381395/simu.fasta 97%  Reading file /tmp/dralph/hmms/381395/simu.fasta 98%  Reading file /tmp/dralph/hmms/381395/simu.fasta 99%  Reading file /tmp/dralph/hmms/381395/simu.fasta 100%  Reading file /tmp/dralph/hmms/381395/simu.fasta 100%
    100750 nt in 250 seqs, min 403, max 403, avg 403
    Indexing sequences 0%  Indexing sequences 0%  Indexing sequences 0%  Indexing sequences 1%  Indexing sequences 1%  Indexing sequences 2%  Indexing sequences 2%  Indexing sequences 2%  Indexing sequences 3%  Indexing sequences 3%  Indexing sequences 4%  Indexing sequences 4%  Indexing sequences 4%  Indexing sequences 5%  Indexing sequences 5%  Indexing sequences 6%  Indexing sequences 6%  Indexing sequences 6%  Indexing sequences 7%  Indexing sequences 7%  Indexing sequences 8%  Indexing sequences 8%  Indexing sequences 8%  Indexing sequences 9%  Indexing sequences 9%  Indexing sequences 10%  Indexing sequences 10%  Indexing sequences 10%  Indexing sequences 11%  Indexing sequences 11%  Indexing sequences 12%  Indexing sequences 12%  Indexing sequences 12%  Indexing sequences 13%  Indexing sequences 13%  Indexing sequences 14%  Indexing sequences 14%  Indexing sequences 14%  Indexing sequences 15%  Indexing sequences 15%  Indexing sequences 16%  Indexing sequences 16%  Indexing sequences 16%  Indexing sequences 17%  Indexing sequences 17%  Indexing sequences 18%  Indexing sequences 18%  Indexing sequences 18%  Indexing sequences 19%  Indexing sequences 19%  Indexing sequences 20%  Indexing sequences 20%  Indexing sequences 20%  Indexing sequences 21%  Indexing sequences 21%  Indexing sequences 22%  Indexing sequences 22%  Indexing sequences 22%  Indexing sequences 23%  Indexing sequences 23%  Indexing sequences 24%  Indexing sequences 24%  Indexing sequences 24%  Indexing sequences 25%  Indexing sequences 25%  Indexing sequences 26%  Indexing sequences 26%  Indexing sequences 26%  Indexing sequences 27%  Indexing sequences 27%  Indexing sequences 28%  Indexing sequences 28%  Indexing sequences 28%  Indexing sequences 29%  Indexing sequences 29%  Indexing sequences 30%  Indexing sequences 30%  Indexing sequences 30%  Indexing sequences 31%  Indexing sequences 31%  Indexing sequences 32%  Indexing sequences 32%  Indexing sequences 32%  Indexing sequences 33%  Indexing sequences 33%  Indexing sequences 34%  Indexing sequences 34%  Indexing sequences 34%  Indexing sequences 35%  Indexing sequences 35%  Indexing sequences 36%  Indexing sequences 36%  Indexing sequences 36%  Indexing sequences 37%  Indexing sequences 37%  Indexing sequences 38%  Indexing sequences 38%  Indexing sequences 38%  Indexing sequences 39%  Indexing sequences 39%  Indexing sequences 40%  Indexing sequences 40%  Indexing sequences 40%  Indexing sequences 41%  Indexing sequences 41%  Indexing sequences 42%  Indexing sequences 42%  Indexing sequences 42%  Indexing sequences 43%  Indexing sequences 43%  Indexing sequences 44%  Indexing sequences 44%  Indexing sequences 44%  Indexing sequences 45%  Indexing sequences 45%  Indexing sequences 46%  Indexing sequences 46%  Indexing sequences 46%  Indexing sequences 47%  Indexing sequences 47%  Indexing sequences 48%  Indexing sequences 48%  Indexing sequences 48%  Indexing sequences 49%  Indexing sequences 49%  Indexing sequences 50%  Indexing sequences 50%  Indexing sequences 50%  Indexing sequences 51%  Indexing sequences 51%  Indexing sequences 52%  Indexing sequences 52%  Indexing sequences 52%  Indexing sequences 53%  Indexing sequences 53%  Indexing sequences 54%  Indexing sequences 54%  Indexing sequences 54%  Indexing sequences 55%  Indexing sequences 55%  Indexing sequences 56%  Indexing sequences 56%  Indexing sequences 56%  Indexing sequences 57%  Indexing sequences 57%  Indexing sequences 58%  Indexing sequences 58%  Indexing sequences 58%  Indexing sequences 59%  Indexing sequences 59%  Indexing sequences 60%  Indexing sequences 60%  Indexing sequences 60%  Indexing sequences 61%  Indexing sequences 61%  Indexing sequences 62%  Indexing sequences 62%  Indexing sequences 62%  Indexing sequences 63%  Indexing sequences 63%  Indexing sequences 64%  Indexing sequences 64%  Indexing sequences 64%  Indexing sequences 65%  Indexing sequences 65%  Indexing sequences 66%  Indexing sequences 66%  Indexing sequences 66%  Indexing sequences 67%  Indexing sequences 67%  Indexing sequences 68%  Indexing sequences 68%  Indexing sequences 68%  Indexing sequences 69%  Indexing sequences 69%  Indexing sequences 70%  Indexing sequences 70%  Indexing sequences 70%  Indexing sequences 71%  Indexing sequences 71%  Indexing sequences 72%  Indexing sequences 72%  Indexing sequences 72%  Indexing sequences 73%  Indexing sequences 73%  Indexing sequences 74%  Indexing sequences 74%  Indexing sequences 74%  Indexing sequences 75%  Indexing sequences 75%  Indexing sequences 76%  Indexing sequences 76%  Indexing sequences 76%  Indexing sequences 77%  Indexing sequences 77%  Indexing sequences 78%  Indexing sequences 78%  Indexing sequences 78%  Indexing sequences 79%  Indexing sequences 79%  Indexing sequences 80%  Indexing sequences 80%  Indexing sequences 80%  Indexing sequences 81%  Indexing sequences 81%  Indexing sequences 82%  Indexing sequences 82%  Indexing sequences 82%  Indexing sequences 83%  Indexing sequences 83%  Indexing sequences 84%  Indexing sequences 84%  Indexing sequences 84%  Indexing sequences 85%  Indexing sequences 85%  Indexing sequences 86%  Indexing sequences 86%  Indexing sequences 86%  Indexing sequences 87%  Indexing sequences 87%  Indexing sequences 88%  Indexing sequences 88%  Indexing sequences 88%  Indexing sequences 89%  Indexing sequences 89%  Indexing sequences 90%  Indexing sequences 90%  Indexing sequences 90%  Indexing sequences 91%  Indexing sequences 91%  Indexing sequences 92%  Indexing sequences 92%  Indexing sequences 92%  Indexing sequences 93%  Indexing sequences 93%  Indexing sequences 94%  Indexing sequences 94%  Indexing sequences 94%  Indexing sequences 95%  Indexing sequences 95%  Indexing sequences 96%  Indexing sequences 96%  Indexing sequences 96%  Indexing sequences 97%  Indexing sequences 97%  Indexing sequences 98%  Indexing sequences 98%  Indexing sequences 98%  Indexing sequences 99%  Indexing sequences 99%  Indexing sequences 100%  Indexing sequences 100%
    Masking 0%  Masking 100%
    Sorting by length 0%  Sorting by length 100%
    Counting unique k-mers 0%  Counting unique k-mers 0%  Counting unique k-mers 0%  Counting unique k-mers 1%  Counting unique k-mers 1%  Counting unique k-mers 2%  Counting unique k-mers 2%  Counting unique k-mers 2%  Counting unique k-mers 3%  Counting unique k-mers 3%  Counting unique k-mers 4%  Counting unique k-mers 4%  Counting unique k-mers 4%  Counting unique k-mers 5%  Counting unique k-mers 5%  Counting unique k-mers 6%  Counting unique k-mers 6%  Counting unique k-mers 6%  Counting unique k-mers 7%  Counting unique k-mers 7%  Counting unique k-mers 8%  Counting unique k-mers 8%  Counting unique k-mers 8%  Counting unique k-mers 9%  Counting unique k-mers 9%  Counting unique k-mers 10%  Counting unique k-mers 10%  Counting unique k-mers 10%  Counting unique k-mers 11%  Counting unique k-mers 11%  Counting unique k-mers 12%  Counting unique k-mers 12%  Counting unique k-mers 12%  Counting unique k-mers 13%  Counting unique k-mers 13%  Counting unique k-mers 14%  Counting unique k-mers 14%  Counting unique k-mers 14%  Counting unique k-mers 15%  Counting unique k-mers 15%  Counting unique k-mers 16%  Counting unique k-mers 16%  Counting unique k-mers 16%  Counting unique k-mers 17%  Counting unique k-mers 17%  Counting unique k-mers 18%  Counting unique k-mers 18%  Counting unique k-mers 18%  Counting unique k-mers 19%  Counting unique k-mers 19%  Counting unique k-mers 20%  Counting unique k-mers 20%  Counting unique k-mers 20%  Counting unique k-mers 21%  Counting unique k-mers 21%  Counting unique k-mers 22%  Counting unique k-mers 22%  Counting unique k-mers 22%  Counting unique k-mers 23%  Counting unique k-mers 23%  Counting unique k-mers 24%  Counting unique k-mers 24%  Counting unique k-mers 24%  Counting unique k-mers 25%  Counting unique k-mers 25%  Counting unique k-mers 26%  Counting unique k-mers 26%  Counting unique k-mers 26%  Counting unique k-mers 27%  Counting unique k-mers 27%  Counting unique k-mers 28%  Counting unique k-mers 28%  Counting unique k-mers 28%  Counting unique k-mers 29%  Counting unique k-mers 29%  Counting unique k-mers 30%  Counting unique k-mers 30%  Counting unique k-mers 30%  Counting unique k-mers 31%  Counting unique k-mers 31%  Counting unique k-mers 32%  Counting unique k-mers 32%  Counting unique k-mers 32%  Counting unique k-mers 33%  Counting unique k-mers 33%  Counting unique k-mers 34%  Counting unique k-mers 34%  Counting unique k-mers 34%  Counting unique k-mers 35%  Counting unique k-mers 35%  Counting unique k-mers 36%  Counting unique k-mers 36%  Counting unique k-mers 36%  Counting unique k-mers 37%  Counting unique k-mers 37%  Counting unique k-mers 38%  Counting unique k-mers 38%  Counting unique k-mers 38%  Counting unique k-mers 39%  Counting unique k-mers 39%  Counting unique k-mers 40%  Counting unique k-mers 40%  Counting unique k-mers 40%  Counting unique k-mers 41%  Counting unique k-mers 41%  Counting unique k-mers 42%  Counting unique k-mers 42%  Counting unique k-mers 42%  Counting unique k-mers 43%  Counting unique k-mers 43%  Counting unique k-mers 44%  Counting unique k-mers 44%  Counting unique k-mers 44%  Counting unique k-mers 45%  Counting unique k-mers 45%  Counting unique k-mers 46%  Counting unique k-mers 46%  Counting unique k-mers 46%  Counting unique k-mers 47%  Counting unique k-mers 47%  Counting unique k-mers 48%  Counting unique k-mers 48%  Counting unique k-mers 48%  Counting unique k-mers 49%  Counting unique k-mers 49%  Counting unique k-mers 50%  Counting unique k-mers 50%  Counting unique k-mers 50%  Counting unique k-mers 51%  Counting unique k-mers 51%  Counting unique k-mers 52%  Counting unique k-mers 52%  Counting unique k-mers 52%  Counting unique k-mers 53%  Counting unique k-mers 53%  Counting unique k-mers 54%  Counting unique k-mers 54%  Counting unique k-mers 54%  Counting unique k-mers 55%  Counting unique k-mers 55%  Counting unique k-mers 56%  Counting unique k-mers 56%  Counting unique k-mers 56%  Counting unique k-mers 57%  Counting unique k-mers 57%  Counting unique k-mers 58%  Counting unique k-mers 58%  Counting unique k-mers 58%  Counting unique k-mers 59%  Counting unique k-mers 59%  Counting unique k-mers 60%  Counting unique k-mers 60%  Counting unique k-mers 60%  Counting unique k-mers 61%  Counting unique k-mers 61%  Counting unique k-mers 62%  Counting unique k-mers 62%  Counting unique k-mers 62%  Counting unique k-mers 63%  Counting unique k-mers 63%  Counting unique k-mers 64%  Counting unique k-mers 64%  Counting unique k-mers 64%  Counting unique k-mers 65%  Counting unique k-mers 65%  Counting unique k-mers 66%  Counting unique k-mers 66%  Counting unique k-mers 66%  Counting unique k-mers 67%  Counting unique k-mers 67%  Counting unique k-mers 68%  Counting unique k-mers 68%  Counting unique k-mers 68%  Counting unique k-mers 69%  Counting unique k-mers 69%  Counting unique k-mers 70%  Counting unique k-mers 70%  Counting unique k-mers 70%  Counting unique k-mers 71%  Counting unique k-mers 71%  Counting unique k-mers 72%  Counting unique k-mers 72%  Counting unique k-mers 72%  Counting unique k-mers 73%  Counting unique k-mers 73%  Counting unique k-mers 74%  Counting unique k-mers 74%  Counting unique k-mers 74%  Counting unique k-mers 75%  Counting unique k-mers 75%  Counting unique k-mers 76%  Counting unique k-mers 76%  Counting unique k-mers 76%  Counting unique k-mers 77%  Counting unique k-mers 77%  Counting unique k-mers 78%  Counting unique k-mers 78%  Counting unique k-mers 78%  Counting unique k-mers 79%  Counting unique k-mers 79%  Counting unique k-mers 80%  Counting unique k-mers 80%  Counting unique k-mers 80%  Counting unique k-mers 81%  Counting unique k-mers 81%  Counting unique k-mers 82%  Counting unique k-mers 82%  Counting unique k-mers 82%  Counting unique k-mers 83%  Counting unique k-mers 83%  Counting unique k-mers 84%  Counting unique k-mers 84%  Counting unique k-mers 84%  Counting unique k-mers 85%  Counting unique k-mers 85%  Counting unique k-mers 86%  Counting unique k-mers 86%  Counting unique k-mers 86%  Counting unique k-mers 87%  Counting unique k-mers 87%  Counting unique k-mers 88%  Counting unique k-mers 88%  Counting unique k-mers 88%  Counting unique k-mers 89%  Counting unique k-mers 89%  Counting unique k-mers 90%  Counting unique k-mers 90%  Counting unique k-mers 90%  Counting unique k-mers 91%  Counting unique k-mers 91%  Counting unique k-mers 92%  Counting unique k-mers 92%  Counting unique k-mers 92%  Counting unique k-mers 93%  Counting unique k-mers 93%  Counting unique k-mers 94%  Counting unique k-mers 94%  Counting unique k-mers 94%  Counting unique k-mers 95%  Counting unique k-mers 95%  Counting unique k-mers 96%  Counting unique k-mers 96%  Counting unique k-mers 96%  Counting unique k-mers 97%  Counting unique k-mers 97%  Counting unique k-mers 98%  Counting unique k-mers 98%  Counting unique k-mers 98%  Counting unique k-mers 99%  Counting unique k-mers 99%  Counting unique k-mers 100%  Counting unique k-mers 100%
    Clustering 0%  Clustering 4%  Clustering 8%  Clustering 12%  Clustering 16%  Clustering 20%  Clustering 24%  Clustering 28%  Clustering 32%  Clustering 36%  Clustering 40%  Clustering 44%  Clustering 48%  Clustering 52%  Clustering 56%  Clustering 60%  Clustering 64%  Clustering 68%  Clustering 72%  Clustering 76%  Clustering 80%  Clustering 84%  Clustering 88%  Clustering 92%  Clustering 96%  Clustering 100%  Clustering 100%
    Writing clusters 0%  Writing clusters 0%  Writing clusters 0%  Writing clusters 1%  Writing clusters 1%  Writing clusters 2%  Writing clusters 2%  Writing clusters 2%  Writing clusters 3%  Writing clusters 3%  Writing clusters 4%  Writing clusters 4%  Writing clusters 4%  Writing clusters 5%  Writing clusters 5%  Writing clusters 6%  Writing clusters 6%  Writing clusters 6%  Writing clusters 7%  Writing clusters 7%  Writing clusters 8%  Writing clusters 8%  Writing clusters 8%  Writing clusters 9%  Writing clusters 9%  Writing clusters 10%  Writing clusters 10%  Writing clusters 10%  Writing clusters 11%  Writing clusters 11%  Writing clusters 12%  Writing clusters 12%  Writing clusters 12%  Writing clusters 13%  Writing clusters 13%  Writing clusters 14%  Writing clusters 14%  Writing clusters 14%  Writing clusters 15%  Writing clusters 15%  Writing clusters 16%  Writing clusters 16%  Writing clusters 16%  Writing clusters 17%  Writing clusters 17%  Writing clusters 18%  Writing clusters 18%  Writing clusters 18%  Writing clusters 19%  Writing clusters 19%  Writing clusters 20%  Writing clusters 20%  Writing clusters 20%  Writing clusters 21%  Writing clusters 21%  Writing clusters 22%  Writing clusters 22%  Writing clusters 22%  Writing clusters 23%  Writing clusters 23%  Writing clusters 24%  Writing clusters 24%  Writing clusters 24%  Writing clusters 25%  Writing clusters 25%  Writing clusters 26%  Writing clusters 26%  Writing clusters 26%  Writing clusters 27%  Writing clusters 27%  Writing clusters 28%  Writing clusters 28%  Writing clusters 28%  Writing clusters 29%  Writing clusters 29%  Writing clusters 30%  Writing clusters 30%  Writing clusters 30%  Writing clusters 31%  Writing clusters 31%  Writing clusters 32%  Writing clusters 32%  Writing clusters 32%  Writing clusters 33%  Writing clusters 33%  Writing clusters 34%  Writing clusters 34%  Writing clusters 34%  Writing clusters 35%  Writing clusters 35%  Writing clusters 36%  Writing clusters 36%  Writing clusters 36%  Writing clusters 37%  Writing clusters 37%  Writing clusters 38%  Writing clusters 38%  Writing clusters 38%  Writing clusters 39%  Writing clusters 39%  Writing clusters 40%  Writing clusters 40%  Writing clusters 40%  Writing clusters 41%  Writing clusters 41%  Writing clusters 42%  Writing clusters 42%  Writing clusters 42%  Writing clusters 43%  Writing clusters 43%  Writing clusters 44%  Writing clusters 44%  Writing clusters 44%  Writing clusters 45%  Writing clusters 45%  Writing clusters 46%  Writing clusters 46%  Writing clusters 46%  Writing clusters 47%  Writing clusters 47%  Writing clusters 48%  Writing clusters 48%  Writing clusters 48%  Writing clusters 49%  Writing clusters 49%  Writing clusters 50%  Writing clusters 50%  Writing clusters 50%  Writing clusters 51%  Writing clusters 51%  Writing clusters 52%  Writing clusters 52%  Writing clusters 52%  Writing clusters 53%  Writing clusters 53%  Writing clusters 54%  Writing clusters 54%  Writing clusters 54%  Writing clusters 55%  Writing clusters 55%  Writing clusters 56%  Writing clusters 56%  Writing clusters 56%  Writing clusters 57%  Writing clusters 57%  Writing clusters 58%  Writing clusters 58%  Writing clusters 58%  Writing clusters 59%  Writing clusters 59%  Writing clusters 60%  Writing clusters 60%  Writing clusters 60%  Writing clusters 61%  Writing clusters 61%  Writing clusters 62%  Writing clusters 62%  Writing clusters 62%  Writing clusters 63%  Writing clusters 63%  Writing clusters 64%  Writing clusters 64%  Writing clusters 64%  Writing clusters 65%  Writing clusters 65%  Writing clusters 66%  Writing clusters 66%  Writing clusters 66%  Writing clusters 67%  Writing clusters 67%  Writing clusters 68%  Writing clusters 68%  Writing clusters 68%  Writing clusters 69%  Writing clusters 69%  Writing clusters 70%  Writing clusters 70%  Writing clusters 70%  Writing clusters 71%  Writing clusters 71%  Writing clusters 72%  Writing clusters 72%  Writing clusters 72%  Writing clusters 73%  Writing clusters 73%  Writing clusters 74%  Writing clusters 74%  Writing clusters 74%  Writing clusters 75%  Writing clusters 75%  Writing clusters 76%  Writing clusters 76%  Writing clusters 76%  Writing clusters 77%  Writing clusters 77%  Writing clusters 78%  Writing clusters 78%  Writing clusters 78%  Writing clusters 79%  Writing clusters 79%  Writing clusters 80%  Writing clusters 80%  Writing clusters 80%  Writing clusters 81%  Writing clusters 81%  Writing clusters 82%  Writing clusters 82%  Writing clusters 82%  Writing clusters 83%  Writing clusters 83%  Writing clusters 84%  Writing clusters 84%  Writing clusters 84%  Writing clusters 85%  Writing clusters 85%  Writing clusters 86%  Writing clusters 86%  Writing clusters 86%  Writing clusters 87%  Writing clusters 87%  Writing clusters 88%  Writing clusters 88%  Writing clusters 88%  Writing clusters 89%  Writing clusters 89%  Writing clusters 90%  Writing clusters 90%  Writing clusters 90%  Writing clusters 91%  Writing clusters 91%  Writing clusters 92%  Writing clusters 92%  Writing clusters 92%  Writing clusters 93%  Writing clusters 93%  Writing clusters 94%  Writing clusters 94%  Writing clusters 94%  Writing clusters 95%  Writing clusters 95%  Writing clusters 96%  Writing clusters 96%  Writing clusters 96%  Writing clusters 97%  Writing clusters 97%  Writing clusters 98%  Writing clusters 98%  Writing clusters 98%  Writing clusters 99%  Writing clusters 99%  Writing clusters 100%  Writing clusters 100%
    Clusters: 80 Size min 1, max 23, avg 3.1
    Singletons: 24, 9.6% of seqs, 30.0% of clusters
    
    checking partition with 250 ids
      looking for 250 ids from input info
      check time: 0.004
      vsearch/swarm time: 1.012
      total time: 22.982
TEST          cache-data-parameters   ./bin/run-driver.py --label test --stashdir test/_new-results --action cache-data-parameters --extra-args __seed:1:__n-procs:10:__only-genes:IGHV4-61*08,IGHV3-48*01,IGHV5-51*02,IGHV3-69-1*02,IGHV1/OR15-1*04,IGHV3-66*03,IGHV3-23D*01,IGHV3-71*03,IGHV1-2*04,IGHV1-2*02,IGHD3-16*02,IGHD2-2*03,IGHD2-8*01,IGHD3-22*01,IGHD6-13*01,IGHD4-17*01,IGHD6-19*01,IGHD3-10*01,IGHD2-15*01,IGHD2-21*02,IGHJ5*02,IGHJ3*02,IGHJ2*01,IGHJ1*01,IGHJ6*03,IGHJ4*02:__only-csv-plots --datafname test/mishmash.fa
RUN ./bin/partis.py --action cache-parameters --seqfile test/mishmash.fa --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --parameter-dir test/_new-results/test/parameters/data --plotdir test/_new-results/test/plots/data
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
   adding placeholder alignments for missing genes [91mj[0m[95m1P[0m[93m01[0m [91mj[0m[95m2P[0m[93m01[0m [91mj[0m[95m3P[0m[93m01[0m [91mj[0m[95m3P[0m[93m02[0m
smith-waterman
    rewriting germlines from /home/dralph/work/partis-dev/data/imgt to /tmp/dralph/hmms/276126/germline-sets (using 26 genes)
        processed       remaining      new-indels          rerun: unproductive      no-match      weird-annot.      nonsense-bounds      invalid-codon
          1394             205              0                          99              86              20               0               0             increasing mismatch score (1 --> 2) and rerunning them
           205              42             33                           0               8               0               1               0             rerunning for indels
            42              10              0                           0               9               0               0               1             increasing mismatch score (2 --> 3) and rerunning them
/usr/lib/pymodules/python2.7/matplotlib/pyplot.py:412: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_num_figures`).
  max_open_warning, RuntimeWarning)
            10               2              0                           0               1               0               0               1             increasing mismatch score (3 --> 4) and rerunning them
      info for 1392      (skipped 0 / 1394 = 0.000 unproductive    2 / 1394 = 0.001 other ) 
   [91mwarning[0m 2 missing annotations (crap-3:3009114784662815033)
    writing parameters
  plotting parameters
  writing hmms with info from test/_new-results/test/parameters/data/sw
hmm
    writing input
    running
      hmm run time: 31.281
    time to merge csv files: 0.038
    read output
    writing parameters
  plotting parameters
    processed 1388 sequences in 1388 events (4 invalid events)
      2 boundary errors
  writing hmms with info from test/_new-results/test/parameters/data/hmm
      total time: 95.392
TEST                       simulate   ./bin/run-driver.py --label test --stashdir test/_new-results --action simulate --extra-args __n-sim-events:500:__n-leaves:2:__mimic-data-read-length:__seed:1:__n-procs:10:__only-genes:IGHV4-61*08,IGHV3-48*01,IGHV5-51*02,IGHV3-69-1*02,IGHV1/OR15-1*04,IGHV3-66*03,IGHV3-23D*01,IGHV3-71*03,IGHV1-2*04,IGHV1-2*02,IGHD3-16*02,IGHD2-2*03,IGHD2-8*01,IGHD3-22*01,IGHD6-13*01,IGHD4-17*01,IGHD6-19*01,IGHD3-10*01,IGHD2-15*01,IGHD2-21*02,IGHJ5*02,IGHJ3*02,IGHJ2*01,IGHJ1*01,IGHJ6*03,IGHJ4*02:__only-csv-plots
RUN ./bin/partis.py --action simulate --outfname test/_new-results/test/simu.csv --n-sim-events 500 --n-leaves 2 --mimic-data-read-length --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --parameter-dir test/_new-results/test/parameters/data/hmm
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
simulating
ERROR bad conserved codons, what the hell?
try again: 1
ERROR bad conserved codons, what the hell?
try again: 1
ERROR bad conserved codons, what the hell?
try again: 1
ERROR bad conserved codons, what the hell?
try again: 1
ERROR bad conserved codons, what the hell?
try again: 1
ERROR bad conserved codons, what the hell?
try again: 1
ERROR bad conserved codons, what the hell?
try again: 1
ERROR bad conserved codons, what the hell?
try again: 1
TEST          cache-simu-parameters   ./bin/run-driver.py --label test --stashdir test/_new-results --action cache-simu-parameters --extra-args __seed:1:__n-procs:10:__only-genes:IGHV4-61*08,IGHV3-48*01,IGHV5-51*02,IGHV3-69-1*02,IGHV1/OR15-1*04,IGHV3-66*03,IGHV3-23D*01,IGHV3-71*03,IGHV1-2*04,IGHV1-2*02,IGHD3-16*02,IGHD2-2*03,IGHD2-8*01,IGHD3-22*01,IGHD6-13*01,IGHD4-17*01,IGHD6-19*01,IGHD3-10*01,IGHD2-15*01,IGHD2-21*02,IGHJ5*02,IGHJ3*02,IGHJ2*01,IGHJ1*01,IGHJ6*03,IGHJ4*02:__only-csv-plots
RUN ./bin/partis.py --action cache-parameters --seqfile test/_new-results/test/simu.csv --is-simu --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --parameter-dir test/_new-results/test/parameters/simu --plotdir test/_new-results/test/plots/simu
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
   adding placeholder alignments for missing genes [91mj[0m[95m1P[0m[93m01[0m [91mj[0m[95m2P[0m[93m01[0m [91mj[0m[95m3P[0m[93m01[0m [91mj[0m[95m3P[0m[93m02[0m
smith-waterman
    rewriting germlines from /home/dralph/work/partis-dev/data/imgt to /tmp/dralph/hmms/432497/germline-sets (using 26 genes)
        processed       remaining      new-indels          rerun: unproductive      no-match      weird-annot.      nonsense-bounds      invalid-codon
           997             178              0                          70              85              23               0               0             increasing mismatch score (1 --> 2) and rerunning them
           178              10              3                           0               5               0               2               0             rerunning for indels
            10               6              0                           0               6               0               0               0             increasing mismatch score (2 --> 3) and rerunning them
/usr/lib/pymodules/python2.7/matplotlib/pyplot.py:412: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_num_figures`).
  max_open_warning, RuntimeWarning)
             6               1              0                           0               1               0               0               0             increasing mismatch score (3 --> 4) and rerunning them
      info for 996      (skipped 0 / 997 = 0.000 unproductive    1 / 997 = 0.001 other ) 
   [91mwarning[0m 1 missing annotations (-8821941325994925903)
    writing parameters
    writing parameters
  plotting parameters
  plotting parameters
  writing hmms with info from test/_new-results/test/parameters/simu/sw
hmm
    writing input
    running
      hmm run time: 19.449
    time to merge csv files: 0.048
    read output
    writing parameters
  plotting parameters
    writing parameters
  plotting parameters
    processed 994 sequences in 994 events (2 invalid events)
      3 boundary errors
  writing hmms with info from test/_new-results/test/parameters/simu/hmm
      WARNING IGHV3-48*01 not found in overall gene probs, returning zero
      WARNING IGHV3-48*01 not found in overall gene probs, returning zero
      total time: 99.652
TEST              annotate-new-simu   ./bin/partis.py --action run-viterbi --plotdir test/_new-results/simu-new-performance --plot-performance --is-simu --seqfile test/_new-results/test/simu.csv --parameter-dir test/_new-results/test/parameters/simu/hmm --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --outfname test/_new-results/annotate-new-simu.csv
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
   adding placeholder alignments for missing genes [91mj[0m[95m1P[0m[93m01[0m [91mj[0m[95m2P[0m[93m01[0m [91mj[0m[95m3P[0m[93m01[0m [91mj[0m[95m3P[0m[93m02[0m
smith-waterman
    rewriting germlines from /home/dralph/work/partis-dev/data/imgt to /tmp/dralph/hmms/477586/germline-sets (using 26 genes)
        processed       remaining      new-indels          rerun: unproductive      no-match      weird-annot.      nonsense-bounds      invalid-codon
           997             178              0                          70              85              23               0               0             increasing mismatch score (1 --> 2) and rerunning them
           178              10              3                           0               5               0               2               0             rerunning for indels
    skipping performance evaluation of 7534029448258028519 because of indels
    skipping performance evaluation of 6387888212624103929 because of indels
            10               6              0                           0               6               0               0               0             increasing mismatch score (2 --> 3) and rerunning them
/usr/lib/pymodules/python2.7/matplotlib/pyplot.py:412: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_num_figures`).
  max_open_warning, RuntimeWarning)
             6               1              0                           0               1               0               0               0             increasing mismatch score (3 --> 4) and rerunning them
  v_gene
    correct up to allele:  921 / 994  = 0.9266 (-0.918, +0.934)
  d_gene
    correct up to allele:  813 / 994  = 0.8179 (-0.805, +0.829)
  j_gene
    correct up to allele:  893 / 994  = 0.8984 (-0.888, +0.907)
      info for 996      (skipped 0 / 997 = 0.000 unproductive    1 / 997 = 0.001 other ) 
   [91mwarning[0m 1 missing annotations (-8821941325994925903)
hmm
    writing input
    running
      hmm run time: 18.173
    time to merge csv files: 0.026
    read output
    skipping performance evaluation of 7534029448258028519 because of indels
    skipping performance evaluation of 6387888212624103929 because of indels
  v_gene
    correct up to allele:  824 / 994  = 0.8290 (-0.817, +0.840)
  d_gene
    correct up to allele:  845 / 994  = 0.8501 (-0.838, +0.860)
  j_gene
    correct up to allele:  945 / 994  = 0.9507 (-0.943, +0.956)
    processed 996 sequences in 996 events (0 invalid events)
      1 boundary errors
missing 1 input keys
      total time: 45.830
TEST              annotate-new-data   ./bin/partis.py --action run-viterbi --n-max-queries 50 --seqfile test/mishmash.fa --parameter-dir test/_new-results/test/parameters/data/hmm --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --outfname test/_new-results/annotate-new-data.csv
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
   adding placeholder alignments for missing genes [91mj[0m[95m1P[0m[93m01[0m [91mj[0m[95m2P[0m[93m01[0m [91mj[0m[95m3P[0m[93m01[0m [91mj[0m[95m3P[0m[93m02[0m
smith-waterman
    rewriting germlines from /home/dralph/work/partis-dev/data/imgt to /tmp/dralph/hmms/714961/germline-sets (using 26 genes)
        processed       remaining      new-indels          rerun: unproductive      no-match      weird-annot.      nonsense-bounds      invalid-codon
            49              14              0                           4               9               1               0               0             increasing mismatch score (1 --> 2) and rerunning them
            14               7              5                           0               1               0               1               0             rerunning for indels
             7               2              0                           0               1               0               0               1             increasing mismatch score (2 --> 3) and rerunning them
             2               1              0                           0               0               0               0               1             increasing mismatch score (3 --> 4) and rerunning them
      info for 48      (skipped 0 / 49 = 0.000 unproductive    1 / 49 = 0.020 other ) 
   [91mwarning[0m 1 missing annotations (crap-3)
hmm
    writing input
    running
      hmm run time: 4.089
    time to merge csv files: 0.019
    read output
    processed 47 sequences in 47 events (1 invalid events)
missing 2 input keys
      total time: 19.032
TEST             partition-new-simu   ./bin/partis.py --action partition --n-max-queries 250 --persistent-cachefname test/_new-results/cache-new-partition.csv --n-precache-procs 10 --is-simu --seqfile test/_new-results/test/simu.csv --parameter-dir test/_new-results/test/parameters/simu/hmm --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --outfname test/_new-results/partition-new-simu.csv
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
   adding placeholder alignments for missing genes [91mj[0m[95m1P[0m[93m01[0m [91mj[0m[95m2P[0m[93m01[0m [91mj[0m[95m3P[0m[93m01[0m [91mj[0m[95m3P[0m[93m02[0m
smith-waterman
    rewriting germlines from /home/dralph/work/partis-dev/data/imgt to /tmp/dralph/hmms/14437/germline-sets (using 26 genes)
        processed       remaining      new-indels          rerun: unproductive      no-match      weird-annot.      nonsense-bounds      invalid-codon
           250              40              0                          19              17               4               0               0             increasing mismatch score (1 --> 2) and rerunning them
            40               2              0                           0               2               0               0               0             increasing mismatch score (2 --> 3) and rerunning them
             2         all done
      info for 250 
        water time: 10.108
    precache procs 10
hmm
    writing input
      caching all naive sequences
    running
      --> proc 0
        cachefile d.n.e.
        time 7.8847
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 2
        cachefile d.n.e.
        time 7.80255
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 3
        cachefile d.n.e.
        time 7.03374
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 4
        cachefile d.n.e.
        time 7.49906
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 5
        cachefile d.n.e.
        time 7.15755
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 6
        cachefile d.n.e.
        time 7.78854
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 7
        cachefile d.n.e.
        time 7.38985
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 8
        cachefile d.n.e.
        time 7.31551
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 1
        cachefile d.n.e.
        time 8.14264
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 9
        cachefile d.n.e.
        time 8.29124
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      hmm run time: 10.104
    time to merge csv files: 0.016
--> 250 clusters with 10 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.015 0.109
    running
      --> proc 6
        read 250 cached logprobs and 250 naive seqs
        stopping after drop -9741.96 --> -9768.26
        time 2.51747
         calculated   vtb 3      fwd 5      hamming merged 5      naive hfracs 386

      --> proc 9
        read 250 cached logprobs and 250 naive seqs
        stopping after drop -8185.45 --> -8210.88
        time 2.36693
         calculated   vtb 3      fwd 6      hamming merged 5      naive hfracs 386

      --> proc 2
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 247   small lratios: 6   total: 253
        time 3.1618
         calculated   vtb 1      fwd 8      hamming merged 2      naive hfracs 345

      --> proc 4
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 201   small lratios: 9   total: 210
        time 3.30343
         calculated   vtb 2      fwd 14     hamming merged 3      naive hfracs 386

      --> proc 7
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 292   small lratios: 8   total: 300
        time 3.04663
         calculated   vtb 0      fwd 8      hamming merged 0      naive hfracs 300

      --> proc 0
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 203   small lratios: 7   total: 210
        time 4.11222
         calculated   vtb 2      fwd 13     hamming merged 4      naive hfracs 386

      --> proc 3
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 223   small lratios: 8   total: 231
        time 4.51474
         calculated   vtb 2      fwd 12     hamming merged 2      naive hfracs 366

      --> proc 5
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 202   small lratios: 8   total: 210
        time 4.40998
         calculated   vtb 2      fwd 12     hamming merged 3      naive hfracs 386

      --> proc 1
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 239   small lratios: 14   total: 253
        time 7.37795
         calculated   vtb 2      fwd 20     hamming merged 1      naive hfracs 345

      --> proc 8
        read 250 cached logprobs and 250 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 199   small lratios: 11   total: 210
        time 7.91603
         calculated   vtb 2      fwd 20     hamming merged 3      naive hfracs 386

      hmm run time: 9.111
    time to merge csv files: 0.018
  merged path 0 with 34 glomeration steps and 217 final clusters
        read cached glomeration time: 0.019
      partition step time: 9.762
--> 222 clusters with 7 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.015 0.109
    running
      --> proc 1
        read 368 cached logprobs and 283 naive seqs
        stopping after drop -13927.7 --> -14028.8
        time 2.12796
         calculated   vtb 2      fwd 4      hamming merged 2      naive hfracs 526

      --> proc 3
        read 368 cached logprobs and 283 naive seqs
        stopping after drop -11299.7 --> -11329.1
        time 2.88544
         calculated   vtb 2      fwd 10     hamming merged 3      naive hfracs 555

      --> proc 6
        read 368 cached logprobs and 283 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 318   small lratios: 7   total: 325
        time 4.60547
         calculated   vtb 5      fwd 13     hamming merged 5      naive hfracs 600

      --> proc 5
        read 368 cached logprobs and 283 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 364   small lratios: 14   total: 378
        time 5.7003
         calculated   vtb 2      fwd 20     hamming merged 3      naive hfracs 549

      --> proc 0
        read 368 cached logprobs and 283 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 416   small lratios: 19   total: 435
        time 6.63712
         calculated   vtb 1      fwd 19     hamming merged 2      naive hfracs 555

      --> proc 2
        read 368 cached logprobs and 283 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 293   small lratios: 7   total: 300
        time 6.86999
         calculated   vtb 4      fwd 17     hamming merged 6      naive hfracs 685

      --> proc 4
        read 368 cached logprobs and 283 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 332   small lratios: 19   total: 351
        time 8.51401
         calculated   vtb 4      fwd 23     hamming merged 3      naive hfracs 636

      hmm run time: 10.078
    time to merge csv files: 0.018
  merged path 0 with 28 glomeration steps and 195 final clusters
        read cached glomeration time: 0.017
      partition step time: 10.656
--> 199 clusters with 5 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.015 0.109
    running
      --> proc 4
        read 474 cached logprobs and 310 naive seqs
        stopping after drop -17217.3 --> -17243.6
        time 3.19107
         calculated   vtb 1      fwd 9      hamming merged 4      naive hfracs 849

      --> proc 0
        read 474 cached logprobs and 310 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 543   small lratios: 18   total: 561
        time 7.61958
         calculated   vtb 3      fwd 25     hamming merged 6      naive hfracs 993

      --> proc 2
        read 474 cached logprobs and 310 naive seqs
        stopping after drop -18674.7 --> -18684.5
        time 7.04467
         calculated   vtb 4      fwd 24     hamming merged 5      naive hfracs 926

      --> proc 3
        read 474 cached logprobs and 310 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 577   small lratios: 18   total: 595
        time 8.12411
         calculated   vtb 2      fwd 25     hamming merged 4      naive hfracs 960

      --> proc 1
        read 474 cached logprobs and 310 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 570   small lratios: 25   total: 595
        time 11.664
         calculated   vtb 3      fwd 36     hamming merged 5      naive hfracs 960

      hmm run time: 13.068
    time to merge csv files: 0.018
  merged path 0 with 26 glomeration steps and 174 final clusters
        read cached glomeration time: 0.122
      partition step time: 13.703
--> 177 clusters with 3 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.015 0.109
    running
      --> proc 2
        read 593 cached logprobs and 334 naive seqs
        stopping after drop -30601.9 --> -30729.2
        time 3.3996
         calculated   vtb 2      fwd 8      hamming merged 5      naive hfracs 1933

      --> proc 1
        read 593 cached logprobs and 334 naive seqs
        stopping after drop -26947 --> -27082.5
        time 5.32295
         calculated   vtb 3      fwd 17     hamming merged 6      naive hfracs 1986

      --> proc 0
        read 593 cached logprobs and 334 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 1138   small lratios: 38   total: 1176
        time 19.6392
         calculated   vtb 4      fwd 57     hamming merged 8      naive hfracs 2236

      hmm run time: 21.051
    time to merge csv files: 0.022
  merged path 0 with 22 glomeration steps and 156 final clusters
        read cached glomeration time: 0.012
      partition step time: 21.515
--> 160 clusters with 2 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.015 0.109
    running
      --> proc 1
        read 675 cached logprobs and 355 naive seqs
        stopping after drop -44833.2 --> -44968.7
        time 15.0005
         calculated   vtb 2      fwd 39     hamming merged 10     naive hfracs 3826

      --> proc 0
        read 675 cached logprobs and 355 naive seqs
        stop for some reason or other with -inf: 0   ham skip: 2092   small lratios: 53   total: 2145
        time 29.014
         calculated   vtb 11     fwd 79     hamming merged 12     naive hfracs 4161

      hmm run time: 31.052
    time to merge csv files: 0.018
  merged path 0 with 25 glomeration steps and 136 final clusters
        read cached glomeration time: 0.011
      partition step time: 31.868
--> 138 clusters with 1 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.015 0.109
    running
        read 793 cached logprobs and 376 naive seqs
        stopping after drop -88827.7 --> -88944.3
        time 9.43456
         calculated   vtb 6      fwd 23     hamming merged 16     naive hfracs 11388
‘test/_new-results/cache-new-partition.csv.tmp’ -> ‘test/_new-results/cache-new-partition.csv’
      hmm run time: 9.582
  merged path 0 with 17 glomeration steps and 122 final clusters
        read cached glomeration time: 0.006
      partition step time: 10.347
      loop time: 97.853
    checking partition with 250 ids
      looking for 250 ids from input info
      check time: 0.002
      write time: 0.009
    time to merge csv files: 0.044
      total time: 120.122
TEST       point-partition-new-simu   ./bin/partis.py --action partition --naive-hamming --n-max-queries 250 --n-precache-procs 10 --is-simu --seqfile test/_new-results/test/simu.csv --parameter-dir test/_new-results/test/parameters/simu/hmm --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --outfname test/_new-results/point-partition-new-simu.csv
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
   adding placeholder alignments for missing genes [91mj[0m[95m1P[0m[93m01[0m [91mj[0m[95m2P[0m[93m01[0m [91mj[0m[95m3P[0m[93m01[0m [91mj[0m[95m3P[0m[93m02[0m
smith-waterman
    rewriting germlines from /home/dralph/work/partis-dev/data/imgt to /tmp/dralph/hmms/510967/germline-sets (using 26 genes)
        processed       remaining      new-indels          rerun: unproductive      no-match      weird-annot.      nonsense-bounds      invalid-codon
           250              40              0                          19              17               4               0               0             increasing mismatch score (1 --> 2) and rerunning them
            40               2              0                           0               2               0               0               0             increasing mismatch score (2 --> 3) and rerunning them
             2         all done
      info for 250 
        water time: 10.290
    precache procs 10
hmm
    writing input
      caching all naive sequences
    running
      --> proc 3
        cachefile d.n.e.
        time 3.93615
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 5
        cachefile d.n.e.
        time 3.89406
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 0
        cachefile d.n.e.
        time 4.52183
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 1
        cachefile d.n.e.
        time 4.47471
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 2
        cachefile d.n.e.
        time 4.42423
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 4
        cachefile d.n.e.
        time 4.16436
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 6
        cachefile d.n.e.
        time 4.33648
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 7
        cachefile d.n.e.
        time 4.12147
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 8
        cachefile d.n.e.
        time 4.13829
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      --> proc 9
        cachefile d.n.e.
        time 4.85323
         calculated   vtb 25     fwd 0      hamming merged 0      naive hfracs 0

      hmm run time: 6.081
    time to merge csv files: 0.016
--> 250 clusters with 10 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.045 0.045
    running
      --> proc 2
        read 0 cached logprobs and 250 naive seqs
        stop with all 231 / 231 hamming distances greater than 0.0452532
        time 0.673531
         calculated   vtb 2      fwd 0      hamming merged 3      naive hfracs 366

      --> proc 7
        read 0 cached logprobs and 250 naive seqs
        stop with all 300 / 300 hamming distances greater than 0.0452532
        time 0.069719
         calculated   vtb 0      fwd 0      hamming merged 0      naive hfracs 300

      --> proc 0
        read 0 cached logprobs and 250 naive seqs
        stop with all 171 / 171 hamming distances greater than 0.0452532
        time 1.79366
         calculated   vtb 4      fwd 0      hamming merged 6      naive hfracs 423

      --> proc 3
        read 0 cached logprobs and 250 naive seqs
        stop with all 210 / 210 hamming distances greater than 0.0452532
        time 1.51745
         calculated   vtb 3      fwd 0      hamming merged 4      naive hfracs 386

      --> proc 4
        read 0 cached logprobs and 250 naive seqs
        stop with all 171 / 171 hamming distances greater than 0.0452532
        time 1.34326
         calculated   vtb 4      fwd 0      hamming merged 6      naive hfracs 423

      --> proc 5
        read 0 cached logprobs and 250 naive seqs
        stop with all 153 / 153 hamming distances greater than 0.0452532
        time 1.67059
         calculated   vtb 5      fwd 0      hamming merged 7      naive hfracs 440

      --> proc 6
        read 0 cached logprobs and 250 naive seqs
        stop with all 171 / 171 hamming distances greater than 0.0452532
        time 1.72476
         calculated   vtb 4      fwd 0      hamming merged 6      naive hfracs 423

      --> proc 9
        read 0 cached logprobs and 250 naive seqs
        stop with all 171 / 171 hamming distances greater than 0.0452532
        time 1.47308
         calculated   vtb 4      fwd 0      hamming merged 6      naive hfracs 423

      --> proc 1
        read 0 cached logprobs and 250 naive seqs
        stop with all 190 / 190 hamming distances greater than 0.0452532
        time 2.49437
         calculated   vtb 5      fwd 0      hamming merged 5      naive hfracs 405

      --> proc 8
        read 0 cached logprobs and 250 naive seqs
        stop with all 190 / 190 hamming distances greater than 0.0452532
        time 2.0044
         calculated   vtb 3      fwd 0      hamming merged 5      naive hfracs 405

      hmm run time: 4.079
    time to merge csv files: 0.020
  merged path 0 with 49 glomeration steps and 202 final clusters
        read cached glomeration time: 0.028
      partition step time: 4.474
--> 202 clusters with 7 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.045 0.045
    running
      --> proc 0
        read 0 cached logprobs and 298 naive seqs
        stop with all 253 / 253 hamming distances greater than 0.0452532
        time 1.30471
         calculated   vtb 1      fwd 0      hamming merged 6      naive hfracs 553

      --> proc 4
        read 0 cached logprobs and 298 naive seqs
        stop with all 325 / 325 hamming distances greater than 0.0452532
        time 1.32243
         calculated   vtb 2      fwd 0      hamming merged 3      naive hfracs 484

      --> proc 6
        read 0 cached logprobs and 298 naive seqs
        stop with all 300 / 300 hamming distances greater than 0.0452532
        time 1.01235
         calculated   vtb 2      fwd 0      hamming merged 3      naive hfracs 453

      --> proc 1
        read 0 cached logprobs and 298 naive seqs
        stop with all 325 / 325 hamming distances greater than 0.0452532
        time 2.89812
         calculated   vtb 2      fwd 0      hamming merged 3      naive hfracs 484

      --> proc 2
        read 0 cached logprobs and 298 naive seqs
        stop with all 276 / 276 hamming distances greater than 0.0452532
        time 2.02191
         calculated   vtb 3      fwd 0      hamming merged 5      naive hfracs 531

      --> proc 3
        read 0 cached logprobs and 298 naive seqs
        stop with all 300 / 300 hamming distances greater than 0.0452532
        time 2.78693
         calculated   vtb 4      fwd 0      hamming merged 4      naive hfracs 508

      --> proc 5
        read 0 cached logprobs and 298 naive seqs
        stop with all 253 / 253 hamming distances greater than 0.0452532
        time 2.17704
         calculated   vtb 6      fwd 0      hamming merged 6      naive hfracs 553

      hmm run time: 4.058
    time to merge csv files: 0.018
  merged path 0 with 31 glomeration steps and 172 final clusters
        read cached glomeration time: 0.011
      partition step time: 4.595
--> 172 clusters with 5 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.045 0.045
    running
      --> proc 0
        read 0 cached logprobs and 328 naive seqs
        stop with all 465 / 465 hamming distances greater than 0.0452532
        time 1.77961
         calculated   vtb 3      fwd 0      hamming merged 4      naive hfracs 721

      --> proc 2
        read 0 cached logprobs and 328 naive seqs
        stop with all 465 / 465 hamming distances greater than 0.0452532
        time 1.22429
         calculated   vtb 2      fwd 0      hamming merged 3      naive hfracs 654

      --> proc 3
        read 0 cached logprobs and 328 naive seqs
        stop with all 378 / 378 hamming distances greater than 0.0452532
        time 1.35817
         calculated   vtb 2      fwd 0      hamming merged 6      naive hfracs 738

      --> proc 4
        read 0 cached logprobs and 328 naive seqs
        stop with all 406 / 406 hamming distances greater than 0.0452532
        time 2.00015
         calculated   vtb 4      fwd 0      hamming merged 5      naive hfracs 711

      --> proc 1
        read 0 cached logprobs and 328 naive seqs
        stop with all 435 / 435 hamming distances greater than 0.0452532
        time 3.32351
         calculated   vtb 5      fwd 0      hamming merged 5      naive hfracs 750

      hmm run time: 5.044
    time to merge csv files: 0.015
  merged path 0 with 24 glomeration steps and 149 final clusters
        read cached glomeration time: 0.201
      partition step time: 5.555
--> 149 clusters with 3 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.045 0.045
    running
      --> proc 0
        read 0 cached logprobs and 351 naive seqs
        stop with all 861 / 861 hamming distances greater than 0.0452532
        time 1.45416
         calculated   vtb 3      fwd 0      hamming merged 8      naive hfracs 1581

      --> proc 1
        read 0 cached logprobs and 351 naive seqs
        stop with all 946 / 946 hamming distances greater than 0.0452532
        time 1.62448
         calculated   vtb 4      fwd 0      hamming merged 6      naive hfracs 1498

      --> proc 2
        read 0 cached logprobs and 351 naive seqs
        stop with all 861 / 861 hamming distances greater than 0.0452532
        time 2.19034
         calculated   vtb 5      fwd 0      hamming merged 7      naive hfracs 1484

      hmm run time: 4.029
    time to merge csv files: 0.013
  merged path 0 with 22 glomeration steps and 128 final clusters
        read cached glomeration time: 0.008
      partition step time: 4.411
--> 128 clusters with 2 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.045 0.045
    running
      --> proc 0
        read 0 cached logprobs and 372 naive seqs
        stop with all 1711 / 1711 hamming distances greater than 0.0452532
        time 2.01076
         calculated   vtb 4      fwd 0      hamming merged 5      naive hfracs 2316

      --> proc 1
        read 0 cached logprobs and 372 naive seqs
        stop with all 1326 / 1326 hamming distances greater than 0.0452532
        time 2.79878
         calculated   vtb 6      fwd 0      hamming merged 12     naive hfracs 2694

      hmm run time: 4.024
    time to merge csv files: 0.018
  merged path 0 with 18 glomeration steps and 111 final clusters
        read cached glomeration time: 0.003
      partition step time: 4.735
--> 111 clusters with 1 procs
hmm
    writing input
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.045 0.045
    running
        read 0 cached logprobs and 389 naive seqs
        stop with all 4186 / 4186 hamming distances greater than 0.0452532
        time 6.30228
         calculated   vtb 13     fwd 0      hamming merged 19     naive hfracs 8005
      hmm run time: 6.410
  merged path 0 with 20 glomeration steps and 92 final clusters
        read cached glomeration time: 0.014
      partition step time: 6.637
      loop time: 30.407
    checking partition with 250 ids
      looking for 250 ids from input info
      check time: 0.004
      write time: 0.018
      total time: 48.967
TEST     vsearch-partition-new-simu   ./bin/partis.py --action partition --naive-vsearch --n-max-queries 250 --n-precache-procs 10 --is-simu --seqfile test/_new-results/test/simu.csv --parameter-dir test/_new-results/test/parameters/simu/hmm --seed 1 --n-procs 10 --only-genes IGHV4-61*08:IGHV3-48*01:IGHV5-51*02:IGHV3-69-1*02:IGHV1/OR15-1*04:IGHV3-66*03:IGHV3-23D*01:IGHV3-71*03:IGHV1-2*04:IGHV1-2*02:IGHD3-16*02:IGHD2-2*03:IGHD2-8*01:IGHD3-22*01:IGHD6-13*01:IGHD4-17*01:IGHD6-19*01:IGHD3-10*01:IGHD2-15*01:IGHD2-21*02:IGHJ5*02:IGHJ3*02:IGHJ2*01:IGHJ1*01:IGHJ6*03:IGHJ4*02 --only-csv-plots --outfname test/_new-results/vsearch-partition-new-simu.csv
    TODO make sure all mpl figures are getting closed
    TODO add some garbage-ey seqs to mishmash.fa
    TODO remove extra assertions from glomerator
    TODO make sure all trace of truncation is removed from ham (including cyst position stuff)
    TODO in addition to translating from a large cluster to a smaller one, you should also not recalculate just 'cause you add one sequence to a huge cluster
    TODO fix WriteAnnotations in glomerator (and/i.e. clean up events_ filling, in particular in ReplaceNaiveSeq)
    TODO besides "replacing" clusters with smaller subsets, you should, when making the merged cluster object, not recalculate unless it's really different
   adding placeholder alignments for missing genes [91mj[0m[95m1P[0m[93m01[0m [91mj[0m[95m2P[0m[93m01[0m [91mj[0m[95m3P[0m[93m01[0m [91mj[0m[95m3P[0m[93m02[0m
smith-waterman
    rewriting germlines from /home/dralph/work/partis-dev/data/imgt to /tmp/dralph/hmms/754810/germline-sets (using 26 genes)
        processed       remaining      new-indels          rerun: unproductive      no-match      weird-annot.      nonsense-bounds      invalid-codon
           250              40              0                          19              17               4               0               0             increasing mismatch score (1 --> 2) and rerunning them
            40               2              0                           0               2               0               0               0             increasing mismatch score (2 --> 3) and rerunning them
             2         all done
      info for 250 
        water time: 10.085
    precache procs 10
hmm
    writing input
      caching all naive sequences
    running
      --> proc 3
        cachefile d.n.e.
        time 6.86493
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 2
        cachefile d.n.e.
        time 7.56702
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 4
        cachefile d.n.e.
        time 7.63607
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 5
        cachefile d.n.e.
        time 7.02302
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 6
        cachefile d.n.e.
        time 7.79898
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 7
        cachefile d.n.e.
        time 7.21296
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 8
        cachefile d.n.e.
        time 7.49581
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 0
        cachefile d.n.e.
        time 8.09238
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 1
        cachefile d.n.e.
        time 8.32241
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      --> proc 9
        cachefile d.n.e.
        time 8.02768
         calculated   vtb 25     fwd 25     hamming merged 0      naive hfracs 0

      hmm run time: 10.088
    time to merge csv files: 0.014
  auto hamming bounds:
      0.112 mutation in test/_new-results/test/parameters/simu/hmm
       naive hamming bounds: 0.032 0.032
    using hfrac bound for vsearch 0.032
  out:
    vsearch v1.1.3_linux_x86_64, 62.8GB RAM, 16 cores
    https://github.com/torognes/vsearch
    
    
  err:
    Reading file /tmp/dralph/hmms/754810/simu.fasta 0%  Reading file /tmp/dralph/hmms/754810/simu.fasta 0%  Reading file /tmp/dralph/hmms/754810/simu.fasta 1%  Reading file /tmp/dralph/hmms/754810/simu.fasta 2%  Reading file /tmp/dralph/hmms/754810/simu.fasta 3%  Reading file /tmp/dralph/hmms/754810/simu.fasta 4%  Reading file /tmp/dralph/hmms/754810/simu.fasta 4%  Reading file /tmp/dralph/hmms/754810/simu.fasta 5%  Reading file /tmp/dralph/hmms/754810/simu.fasta 6%  Reading file /tmp/dralph/hmms/754810/simu.fasta 7%  Reading file /tmp/dralph/hmms/754810/simu.fasta 8%  Reading file /tmp/dralph/hmms/754810/simu.fasta 8%  Reading file /tmp/dralph/hmms/754810/simu.fasta 9%  Reading file /tmp/dralph/hmms/754810/simu.fasta 10%  Reading file /tmp/dralph/hmms/754810/simu.fasta 11%  Reading file /tmp/dralph/hmms/754810/simu.fasta 12%  Reading file /tmp/dralph/hmms/754810/simu.fasta 12%  Reading file /tmp/dralph/hmms/754810/simu.fasta 13%  Reading file /tmp/dralph/hmms/754810/simu.fasta 14%  Reading file /tmp/dralph/hmms/754810/simu.fasta 15%  Reading file /tmp/dralph/hmms/754810/simu.fasta 16%  Reading file /tmp/dralph/hmms/754810/simu.fasta 16%  Reading file /tmp/dralph/hmms/754810/simu.fasta 17%  Reading file /tmp/dralph/hmms/754810/simu.fasta 18%  Reading file /tmp/dralph/hmms/754810/simu.fasta 19%  Reading file /tmp/dralph/hmms/754810/simu.fasta 20%  Reading file /tmp/dralph/hmms/754810/simu.fasta 20%  Reading file /tmp/dralph/hmms/754810/simu.fasta 21%  Reading file /tmp/dralph/hmms/754810/simu.fasta 22%  Reading file /tmp/dralph/hmms/754810/simu.fasta 23%  Reading file /tmp/dralph/hmms/754810/simu.fasta 24%  Reading file /tmp/dralph/hmms/754810/simu.fasta 24%  Reading file /tmp/dralph/hmms/754810/simu.fasta 25%  Reading file /tmp/dralph/hmms/754810/simu.fasta 26%  Reading file /tmp/dralph/hmms/754810/simu.fasta 27%  Reading file /tmp/dralph/hmms/754810/simu.fasta 28%  Reading file /tmp/dralph/hmms/754810/simu.fasta 28%  Reading file /tmp/dralph/hmms/754810/simu.fasta 29%  Reading file /tmp/dralph/hmms/754810/simu.fasta 30%  Reading file /tmp/dralph/hmms/754810/simu.fasta 31%  Reading file /tmp/dralph/hmms/754810/simu.fasta 32%  Reading file /tmp/dralph/hmms/754810/simu.fasta 32%  Reading file /tmp/dralph/hmms/754810/simu.fasta 33%  Reading file /tmp/dralph/hmms/754810/simu.fasta 34%  Reading file /tmp/dralph/hmms/754810/simu.fasta 35%  Reading file /tmp/dralph/hmms/754810/simu.fasta 36%  Reading file /tmp/dralph/hmms/754810/simu.fasta 36%  Reading file /tmp/dralph/hmms/754810/simu.fasta 37%  Reading file /tmp/dralph/hmms/754810/simu.fasta 38%  Reading file /tmp/dralph/hmms/754810/simu.fasta 39%  Reading file /tmp/dralph/hmms/754810/simu.fasta 40%  Reading file /tmp/dralph/hmms/754810/simu.fasta 40%  Reading file /tmp/dralph/hmms/754810/simu.fasta 41%  Reading file /tmp/dralph/hmms/754810/simu.fasta 42%  Reading file /tmp/dralph/hmms/754810/simu.fasta 43%  Reading file /tmp/dralph/hmms/754810/simu.fasta 44%  Reading file /tmp/dralph/hmms/754810/simu.fasta 44%  Reading file /tmp/dralph/hmms/754810/simu.fasta 45%  Reading file /tmp/dralph/hmms/754810/simu.fasta 46%  Reading file /tmp/dralph/hmms/754810/simu.fasta 47%  Reading file /tmp/dralph/hmms/754810/simu.fasta 48%  Reading file /tmp/dralph/hmms/754810/simu.fasta 48%  Reading file /tmp/dralph/hmms/754810/simu.fasta 49%  Reading file /tmp/dralph/hmms/754810/simu.fasta 50%  Reading file /tmp/dralph/hmms/754810/simu.fasta 51%  Reading file /tmp/dralph/hmms/754810/simu.fasta 52%  Reading file /tmp/dralph/hmms/754810/simu.fasta 52%  Reading file /tmp/dralph/hmms/754810/simu.fasta 53%  Reading file /tmp/dralph/hmms/754810/simu.fasta 54%  Reading file /tmp/dralph/hmms/754810/simu.fasta 55%  Reading file /tmp/dralph/hmms/754810/simu.fasta 56%  Reading file /tmp/dralph/hmms/754810/simu.fasta 56%  Reading file /tmp/dralph/hmms/754810/simu.fasta 57%  Reading file /tmp/dralph/hmms/754810/simu.fasta 58%  Reading file /tmp/dralph/hmms/754810/simu.fasta 59%  Reading file /tmp/dralph/hmms/754810/simu.fasta 60%  Reading file /tmp/dralph/hmms/754810/simu.fasta 60%  Reading file /tmp/dralph/hmms/754810/simu.fasta 61%  Reading file /tmp/dralph/hmms/754810/simu.fasta 62%  Reading file /tmp/dralph/hmms/754810/simu.fasta 63%  Reading file /tmp/dralph/hmms/754810/simu.fasta 64%  Reading file /tmp/dralph/hmms/754810/simu.fasta 64%  Reading file /tmp/dralph/hmms/754810/simu.fasta 65%  Reading file /tmp/dralph/hmms/754810/simu.fasta 66%  Reading file /tmp/dralph/hmms/754810/simu.fasta 67%  Reading file /tmp/dralph/hmms/754810/simu.fasta 68%  Reading file /tmp/dralph/hmms/754810/simu.fasta 68%  Reading file /tmp/dralph/hmms/754810/simu.fasta 69%  Reading file /tmp/dralph/hmms/754810/simu.fasta 70%  Reading file /tmp/dralph/hmms/754810/simu.fasta 71%  Reading file /tmp/dralph/hmms/754810/simu.fasta 72%  Reading file /tmp/dralph/hmms/754810/simu.fasta 72%  Reading file /tmp/dralph/hmms/754810/simu.fasta 73%  Reading file /tmp/dralph/hmms/754810/simu.fasta 74%  Reading file /tmp/dralph/hmms/754810/simu.fasta 75%  Reading file /tmp/dralph/hmms/754810/simu.fasta 76%  Reading file /tmp/dralph/hmms/754810/simu.fasta 76%  Reading file /tmp/dralph/hmms/754810/simu.fasta 77%  Reading file /tmp/dralph/hmms/754810/simu.fasta 78%  Reading file /tmp/dralph/hmms/754810/simu.fasta 79%  Reading file /tmp/dralph/hmms/754810/simu.fasta 80%  Reading file /tmp/dralph/hmms/754810/simu.fasta 80%  Reading file /tmp/dralph/hmms/754810/simu.fasta 81%  Reading file /tmp/dralph/hmms/754810/simu.fasta 82%  Reading file /tmp/dralph/hmms/754810/simu.fasta 83%  Reading file /tmp/dralph/hmms/754810/simu.fasta 84%  Reading file /tmp/dralph/hmms/754810/simu.fasta 84%  Reading file /tmp/dralph/hmms/754810/simu.fasta 85%  Reading file /tmp/dralph/hmms/754810/simu.fasta 86%  Reading file /tmp/dralph/hmms/754810/simu.fasta 87%  Reading file /tmp/dralph/hmms/754810/simu.fasta 88%  Reading file /tmp/dralph/hmms/754810/simu.fasta 88%  Reading file /tmp/dralph/hmms/754810/simu.fasta 89%  Reading file /tmp/dralph/hmms/754810/simu.fasta 90%  Reading file /tmp/dralph/hmms/754810/simu.fasta 91%  Reading file /tmp/dralph/hmms/754810/simu.fasta 92%  Reading file /tmp/dralph/hmms/754810/simu.fasta 92%  Reading file /tmp/dralph/hmms/754810/simu.fasta 93%  Reading file /tmp/dralph/hmms/754810/simu.fasta 94%  Reading file /tmp/dralph/hmms/754810/simu.fasta 95%  Reading file /tmp/dralph/hmms/754810/simu.fasta 96%  Reading file /tmp/dralph/hmms/754810/simu.fasta 96%  Reading file /tmp/dralph/hmms/754810/simu.fasta 97%  Reading file /tmp/dralph/hmms/754810/simu.fasta 98%  Reading file /tmp/dralph/hmms/754810/simu.fasta 99%  Reading file /tmp/dralph/hmms/754810/simu.fasta 100%  Reading file /tmp/dralph/hmms/754810/simu.fasta 100%
    100750 nt in 250 seqs, min 403, max 403, avg 403
    Indexing sequences 0%  Indexing sequences 0%  Indexing sequences 0%  Indexing sequences 1%  Indexing sequences 1%  Indexing sequences 2%  Indexing sequences 2%  Indexing sequences 2%  Indexing sequences 3%  Indexing sequences 3%  Indexing sequences 4%  Indexing sequences 4%  Indexing sequences 4%  Indexing sequences 5%  Indexing sequences 5%  Indexing sequences 6%  Indexing sequences 6%  Indexing sequences 6%  Indexing sequences 7%  Indexing sequences 7%  Indexing sequences 8%  Indexing sequences 8%  Indexing sequences 8%  Indexing sequences 9%  Indexing sequences 9%  Indexing sequences 10%  Indexing sequences 10%  Indexing sequences 10%  Indexing sequences 11%  Indexing sequences 11%  Indexing sequences 12%  Indexing sequences 12%  Indexing sequences 12%  Indexing sequences 13%  Indexing sequences 13%  Indexing sequences 14%  Indexing sequences 14%  Indexing sequences 14%  Indexing sequences 15%  Indexing sequences 15%  Indexing sequences 16%  Indexing sequences 16%  Indexing sequences 16%  Indexing sequences 17%  Indexing sequences 17%  Indexing sequences 18%  Indexing sequences 18%  Indexing sequences 18%  Indexing sequences 19%  Indexing sequences 19%  Indexing sequences 20%  Indexing sequences 20%  Indexing sequences 20%  Indexing sequences 21%  Indexing sequences 21%  Indexing sequences 22%  Indexing sequences 22%  Indexing sequences 22%  Indexing sequences 23%  Indexing sequences 23%  Indexing sequences 24%  Indexing sequences 24%  Indexing sequences 24%  Indexing sequences 25%  Indexing sequences 25%  Indexing sequences 26%  Indexing sequences 26%  Indexing sequences 26%  Indexing sequences 27%  Indexing sequences 27%  Indexing sequences 28%  Indexing sequences 28%  Indexing sequences 28%  Indexing sequences 29%  Indexing sequences 29%  Indexing sequences 30%  Indexing sequences 30%  Indexing sequences 30%  Indexing sequences 31%  Indexing sequences 31%  Indexing sequences 32%  Indexing sequences 32%  Indexing sequences 32%  Indexing sequences 33%  Indexing sequences 33%  Indexing sequences 34%  Indexing sequences 34%  Indexing sequences 34%  Indexing sequences 35%  Indexing sequences 35%  Indexing sequences 36%  Indexing sequences 36%  Indexing sequences 36%  Indexing sequences 37%  Indexing sequences 37%  Indexing sequences 38%  Indexing sequences 38%  Indexing sequences 38%  Indexing sequences 39%  Indexing sequences 39%  Indexing sequences 40%  Indexing sequences 40%  Indexing sequences 40%  Indexing sequences 41%  Indexing sequences 41%  Indexing sequences 42%  Indexing sequences 42%  Indexing sequences 42%  Indexing sequences 43%  Indexing sequences 43%  Indexing sequences 44%  Indexing sequences 44%  Indexing sequences 44%  Indexing sequences 45%  Indexing sequences 45%  Indexing sequences 46%  Indexing sequences 46%  Indexing sequences 46%  Indexing sequences 47%  Indexing sequences 47%  Indexing sequences 48%  Indexing sequences 48%  Indexing sequences 48%  Indexing sequences 49%  Indexing sequences 49%  Indexing sequences 50%  Indexing sequences 50%  Indexing sequences 50%  Indexing sequences 51%  Indexing sequences 51%  Indexing sequences 52%  Indexing sequences 52%  Indexing sequences 52%  Indexing sequences 53%  Indexing sequences 53%  Indexing sequences 54%  Indexing sequences 54%  Indexing sequences 54%  Indexing sequences 55%  Indexing sequences 55%  Indexing sequences 56%  Indexing sequences 56%  Indexing sequences 56%  Indexing sequences 57%  Indexing sequences 57%  Indexing sequences 58%  Indexing sequences 58%  Indexing sequences 58%  Indexing sequences 59%  Indexing sequences 59%  Indexing sequences 60%  Indexing sequences 60%  Indexing sequences 60%  Indexing sequences 61%  Indexing sequences 61%  Indexing sequences 62%  Indexing sequences 62%  Indexing sequences 62%  Indexing sequences 63%  Indexing sequences 63%  Indexing sequences 64%  Indexing sequences 64%  Indexing sequences 64%  Indexing sequences 65%  Indexing sequences 65%  Indexing sequences 66%  Indexing sequences 66%  Indexing sequences 66%  Indexing sequences 67%  Indexing sequences 67%  Indexing sequences 68%  Indexing sequences 68%  Indexing sequences 68%  Indexing sequences 69%  Indexing sequences 69%  Indexing sequences 70%  Indexing sequences 70%  Indexing sequences 70%  Indexing sequences 71%  Indexing sequences 71%  Indexing sequences 72%  Indexing sequences 72%  Indexing sequences 72%  Indexing sequences 73%  Indexing sequences 73%  Indexing sequences 74%  Indexing sequences 74%  Indexing sequences 74%  Indexing sequences 75%  Indexing sequences 75%  Indexing sequences 76%  Indexing sequences 76%  Indexing sequences 76%  Indexing sequences 77%  Indexing sequences 77%  Indexing sequences 78%  Indexing sequences 78%  Indexing sequences 78%  Indexing sequences 79%  Indexing sequences 79%  Indexing sequences 80%  Indexing sequences 80%  Indexing sequences 80%  Indexing sequences 81%  Indexing sequences 81%  Indexing sequences 82%  Indexing sequences 82%  Indexing sequences 82%  Indexing sequences 83%  Indexing sequences 83%  Indexing sequences 84%  Indexing sequences 84%  Indexing sequences 84%  Indexing sequences 85%  Indexing sequences 85%  Indexing sequences 86%  Indexing sequences 86%  Indexing sequences 86%  Indexing sequences 87%  Indexing sequences 87%  Indexing sequences 88%  Indexing sequences 88%  Indexing sequences 88%  Indexing sequences 89%  Indexing sequences 89%  Indexing sequences 90%  Indexing sequences 90%  Indexing sequences 90%  Indexing sequences 91%  Indexing sequences 91%  Indexing sequences 92%  Indexing sequences 92%  Indexing sequences 92%  Indexing sequences 93%  Indexing sequences 93%  Indexing sequences 94%  Indexing sequences 94%  Indexing sequences 94%  Indexing sequences 95%  Indexing sequences 95%  Indexing sequences 96%  Indexing sequences 96%  Indexing sequences 96%  Indexing sequences 97%  Indexing sequences 97%  Indexing sequences 98%  Indexing sequences 98%  Indexing sequences 98%  Indexing sequences 99%  Indexing sequences 99%  Indexing sequences 100%  Indexing sequences 100%
    Masking 0%  Masking 100%
    Sorting by length 0%  Sorting by length 100%
    Counting unique k-mers 0%  Counting unique k-mers 0%  Counting unique k-mers 0%  Counting unique k-mers 1%  Counting unique k-mers 1%  Counting unique k-mers 2%  Counting unique k-mers 2%  Counting unique k-mers 2%  Counting unique k-mers 3%  Counting unique k-mers 3%  Counting unique k-mers 4%  Counting unique k-mers 4%  Counting unique k-mers 4%  Counting unique k-mers 5%  Counting unique k-mers 5%  Counting unique k-mers 6%  Counting unique k-mers 6%  Counting unique k-mers 6%  Counting unique k-mers 7%  Counting unique k-mers 7%  Counting unique k-mers 8%  Counting unique k-mers 8%  Counting unique k-mers 8%  Counting unique k-mers 9%  Counting unique k-mers 9%  Counting unique k-mers 10%  Counting unique k-mers 10%  Counting unique k-mers 10%  Counting unique k-mers 11%  Counting unique k-mers 11%  Counting unique k-mers 12%  Counting unique k-mers 12%  Counting unique k-mers 12%  Counting unique k-mers 13%  Counting unique k-mers 13%  Counting unique k-mers 14%  Counting unique k-mers 14%  Counting unique k-mers 14%  Counting unique k-mers 15%  Counting unique k-mers 15%  Counting unique k-mers 16%  Counting unique k-mers 16%  Counting unique k-mers 16%  Counting unique k-mers 17%  Counting unique k-mers 17%  Counting unique k-mers 18%  Counting unique k-mers 18%  Counting unique k-mers 18%  Counting unique k-mers 19%  Counting unique k-mers 19%  Counting unique k-mers 20%  Counting unique k-mers 20%  Counting unique k-mers 20%  Counting unique k-mers 21%  Counting unique k-mers 21%  Counting unique k-mers 22%  Counting unique k-mers 22%  Counting unique k-mers 22%  Counting unique k-mers 23%  Counting unique k-mers 23%  Counting unique k-mers 24%  Counting unique k-mers 24%  Counting unique k-mers 24%  Counting unique k-mers 25%  Counting unique k-mers 25%  Counting unique k-mers 26%  Counting unique k-mers 26%  Counting unique k-mers 26%  Counting unique k-mers 27%  Counting unique k-mers 27%  Counting unique k-mers 28%  Counting unique k-mers 28%  Counting unique k-mers 28%  Counting unique k-mers 29%  Counting unique k-mers 29%  Counting unique k-mers 30%  Counting unique k-mers 30%  Counting unique k-mers 30%  Counting unique k-mers 31%  Counting unique k-mers 31%  Counting unique k-mers 32%  Counting unique k-mers 32%  Counting unique k-mers 32%  Counting unique k-mers 33%  Counting unique k-mers 33%  Counting unique k-mers 34%  Counting unique k-mers 34%  Counting unique k-mers 34%  Counting unique k-mers 35%  Counting unique k-mers 35%  Counting unique k-mers 36%  Counting unique k-mers 36%  Counting unique k-mers 36%  Counting unique k-mers 37%  Counting unique k-mers 37%  Counting unique k-mers 38%  Counting unique k-mers 38%  Counting unique k-mers 38%  Counting unique k-mers 39%  Counting unique k-mers 39%  Counting unique k-mers 40%  Counting unique k-mers 40%  Counting unique k-mers 40%  Counting unique k-mers 41%  Counting unique k-mers 41%  Counting unique k-mers 42%  Counting unique k-mers 42%  Counting unique k-mers 42%  Counting unique k-mers 43%  Counting unique k-mers 43%  Counting unique k-mers 44%  Counting unique k-mers 44%  Counting unique k-mers 44%  Counting unique k-mers 45%  Counting unique k-mers 45%  Counting unique k-mers 46%  Counting unique k-mers 46%  Counting unique k-mers 46%  Counting unique k-mers 47%  Counting unique k-mers 47%  Counting unique k-mers 48%  Counting unique k-mers 48%  Counting unique k-mers 48%  Counting unique k-mers 49%  Counting unique k-mers 49%  Counting unique k-mers 50%  Counting unique k-mers 50%  Counting unique k-mers 50%  Counting unique k-mers 51%  Counting unique k-mers 51%  Counting unique k-mers 52%  Counting unique k-mers 52%  Counting unique k-mers 52%  Counting unique k-mers 53%  Counting unique k-mers 53%  Counting unique k-mers 54%  Counting unique k-mers 54%  Counting unique k-mers 54%  Counting unique k-mers 55%  Counting unique k-mers 55%  Counting unique k-mers 56%  Counting unique k-mers 56%  Counting unique k-mers 56%  Counting unique k-mers 57%  Counting unique k-mers 57%  Counting unique k-mers 58%  Counting unique k-mers 58%  Counting unique k-mers 58%  Counting unique k-mers 59%  Counting unique k-mers 59%  Counting unique k-mers 60%  Counting unique k-mers 60%  Counting unique k-mers 60%  Counting unique k-mers 61%  Counting unique k-mers 61%  Counting unique k-mers 62%  Counting unique k-mers 62%  Counting unique k-mers 62%  Counting unique k-mers 63%  Counting unique k-mers 63%  Counting unique k-mers 64%  Counting unique k-mers 64%  Counting unique k-mers 64%  Counting unique k-mers 65%  Counting unique k-mers 65%  Counting unique k-mers 66%  Counting unique k-mers 66%  Counting unique k-mers 66%  Counting unique k-mers 67%  Counting unique k-mers 67%  Counting unique k-mers 68%  Counting unique k-mers 68%  Counting unique k-mers 68%  Counting unique k-mers 69%  Counting unique k-mers 69%  Counting unique k-mers 70%  Counting unique k-mers 70%  Counting unique k-mers 70%  Counting unique k-mers 71%  Counting unique k-mers 71%  Counting unique k-mers 72%  Counting unique k-mers 72%  Counting unique k-mers 72%  Counting unique k-mers 73%  Counting unique k-mers 73%  Counting unique k-mers 74%  Counting unique k-mers 74%  Counting unique k-mers 74%  Counting unique k-mers 75%  Counting unique k-mers 75%  Counting unique k-mers 76%  Counting unique k-mers 76%  Counting unique k-mers 76%  Counting unique k-mers 77%  Counting unique k-mers 77%  Counting unique k-mers 78%  Counting unique k-mers 78%  Counting unique k-mers 78%  Counting unique k-mers 79%  Counting unique k-mers 79%  Counting unique k-mers 80%  Counting unique k-mers 80%  Counting unique k-mers 80%  Counting unique k-mers 81%  Counting unique k-mers 81%  Counting unique k-mers 82%  Counting unique k-mers 82%  Counting unique k-mers 82%  Counting unique k-mers 83%  Counting unique k-mers 83%  Counting unique k-mers 84%  Counting unique k-mers 84%  Counting unique k-mers 84%  Counting unique k-mers 85%  Counting unique k-mers 85%  Counting unique k-mers 86%  Counting unique k-mers 86%  Counting unique k-mers 86%  Counting unique k-mers 87%  Counting unique k-mers 87%  Counting unique k-mers 88%  Counting unique k-mers 88%  Counting unique k-mers 88%  Counting unique k-mers 89%  Counting unique k-mers 89%  Counting unique k-mers 90%  Counting unique k-mers 90%  Counting unique k-mers 90%  Counting unique k-mers 91%  Counting unique k-mers 91%  Counting unique k-mers 92%  Counting unique k-mers 92%  Counting unique k-mers 92%  Counting unique k-mers 93%  Counting unique k-mers 93%  Counting unique k-mers 94%  Counting unique k-mers 94%  Counting unique k-mers 94%  Counting unique k-mers 95%  Counting unique k-mers 95%  Counting unique k-mers 96%  Counting unique k-mers 96%  Counting unique k-mers 96%  Counting unique k-mers 97%  Counting unique k-mers 97%  Counting unique k-mers 98%  Counting unique k-mers 98%  Counting unique k-mers 98%  Counting unique k-mers 99%  Counting unique k-mers 99%  Counting unique k-mers 100%  Counting unique k-mers 100%
    Clustering 0%  Clustering 4%  Clustering 8%  Clustering 12%  Clustering 16%  Clustering 20%  Clustering 24%  Clustering 28%  Clustering 32%  Clustering 36%  Clustering 40%  Clustering 44%  Clustering 48%  Clustering 52%  Clustering 56%  Clustering 60%  Clustering 64%  Clustering 68%  Clustering 72%  Clustering 76%  Clustering 80%  Clustering 84%  Clustering 88%  Clustering 92%  Clustering 96%  Clustering 100%  Clustering 100%
    Writing clusters 0%  Writing clusters 0%  Writing clusters 0%  Writing clusters 1%  Writing clusters 1%  Writing clusters 2%  Writing clusters 2%  Writing clusters 2%  Writing clusters 3%  Writing clusters 3%  Writing clusters 4%  Writing clusters 4%  Writing clusters 4%  Writing clusters 5%  Writing clusters 5%  Writing clusters 6%  Writing clusters 6%  Writing clusters 6%  Writing clusters 7%  Writing clusters 7%  Writing clusters 8%  Writing clusters 8%  Writing clusters 8%  Writing clusters 9%  Writing clusters 9%  Writing clusters 10%  Writing clusters 10%  Writing clusters 10%  Writing clusters 11%  Writing clusters 11%  Writing clusters 12%  Writing clusters 12%  Writing clusters 12%  Writing clusters 13%  Writing clusters 13%  Writing clusters 14%  Writing clusters 14%  Writing clusters 14%  Writing clusters 15%  Writing clusters 15%  Writing clusters 16%  Writing clusters 16%  Writing clusters 16%  Writing clusters 17%  Writing clusters 17%  Writing clusters 18%  Writing clusters 18%  Writing clusters 18%  Writing clusters 19%  Writing clusters 19%  Writing clusters 20%  Writing clusters 20%  Writing clusters 20%  Writing clusters 21%  Writing clusters 21%  Writing clusters 22%  Writing clusters 22%  Writing clusters 22%  Writing clusters 23%  Writing clusters 23%  Writing clusters 24%  Writing clusters 24%  Writing clusters 24%  Writing clusters 25%  Writing clusters 25%  Writing clusters 26%  Writing clusters 26%  Writing clusters 26%  Writing clusters 27%  Writing clusters 27%  Writing clusters 28%  Writing clusters 28%  Writing clusters 28%  Writing clusters 29%  Writing clusters 29%  Writing clusters 30%  Writing clusters 30%  Writing clusters 30%  Writing clusters 31%  Writing clusters 31%  Writing clusters 32%  Writing clusters 32%  Writing clusters 32%  Writing clusters 33%  Writing clusters 33%  Writing clusters 34%  Writing clusters 34%  Writing clusters 34%  Writing clusters 35%  Writing clusters 35%  Writing clusters 36%  Writing clusters 36%  Writing clusters 36%  Writing clusters 37%  Writing clusters 37%  Writing clusters 38%  Writing clusters 38%  Writing clusters 38%  Writing clusters 39%  Writing clusters 39%  Writing clusters 40%  Writing clusters 40%  Writing clusters 40%  Writing clusters 41%  Writing clusters 41%  Writing clusters 42%  Writing clusters 42%  Writing clusters 42%  Writing clusters 43%  Writing clusters 43%  Writing clusters 44%  Writing clusters 44%  Writing clusters 44%  Writing clusters 45%  Writing clusters 45%  Writing clusters 46%  Writing clusters 46%  Writing clusters 46%  Writing clusters 47%  Writing clusters 47%  Writing clusters 48%  Writing clusters 48%  Writing clusters 48%  Writing clusters 49%  Writing clusters 49%  Writing clusters 50%  Writing clusters 50%  Writing clusters 50%  Writing clusters 51%  Writing clusters 51%  Writing clusters 52%  Writing clusters 52%  Writing clusters 52%  Writing clusters 53%  Writing clusters 53%  Writing clusters 54%  Writing clusters 54%  Writing clusters 54%  Writing clusters 55%  Writing clusters 55%  Writing clusters 56%  Writing clusters 56%  Writing clusters 56%  Writing clusters 57%  Writing clusters 57%  Writing clusters 58%  Writing clusters 58%  Writing clusters 58%  Writing clusters 59%  Writing clusters 59%  Writing clusters 60%  Writing clusters 60%  Writing clusters 60%  Writing clusters 61%  Writing clusters 61%  Writing clusters 62%  Writing clusters 62%  Writing clusters 62%  Writing clusters 63%  Writing clusters 63%  Writing clusters 64%  Writing clusters 64%  Writing clusters 64%  Writing clusters 65%  Writing clusters 65%  Writing clusters 66%  Writing clusters 66%  Writing clusters 66%  Writing clusters 67%  Writing clusters 67%  Writing clusters 68%  Writing clusters 68%  Writing clusters 68%  Writing clusters 69%  Writing clusters 69%  Writing clusters 70%  Writing clusters 70%  Writing clusters 70%  Writing clusters 71%  Writing clusters 71%  Writing clusters 72%  Writing clusters 72%  Writing clusters 72%  Writing clusters 73%  Writing clusters 73%  Writing clusters 74%  Writing clusters 74%  Writing clusters 74%  Writing clusters 75%  Writing clusters 75%  Writing clusters 76%  Writing clusters 76%  Writing clusters 76%  Writing clusters 77%  Writing clusters 77%  Writing clusters 78%  Writing clusters 78%  Writing clusters 78%  Writing clusters 79%  Writing clusters 79%  Writing clusters 80%  Writing clusters 80%  Writing clusters 80%  Writing clusters 81%  Writing clusters 81%  Writing clusters 82%  Writing clusters 82%  Writing clusters 82%  Writing clusters 83%  Writing clusters 83%  Writing clusters 84%  Writing clusters 84%  Writing clusters 84%  Writing clusters 85%  Writing clusters 85%  Writing clusters 86%  Writing clusters 86%  Writing clusters 86%  Writing clusters 87%  Writing clusters 87%  Writing clusters 88%  Writing clusters 88%  Writing clusters 88%  Writing clusters 89%  Writing clusters 89%  Writing clusters 90%  Writing clusters 90%  Writing clusters 90%  Writing clusters 91%  Writing clusters 91%  Writing clusters 92%  Writing clusters 92%  Writing clusters 92%  Writing clusters 93%  Writing clusters 93%  Writing clusters 94%  Writing clusters 94%  Writing clusters 94%  Writing clusters 95%  Writing clusters 95%  Writing clusters 96%  Writing clusters 96%  Writing clusters 96%  Writing clusters 97%  Writing clusters 97%  Writing clusters 98%  Writing clusters 98%  Writing clusters 98%  Writing clusters 99%  Writing clusters 99%  Writing clusters 100%  Writing clusters 100%
    Clusters: 80 Size min 1, max 23, avg 3.1
    Singletons: 24, 9.6% of seqs, 30.0% of clusters
    
    checking partition with 250 ids
      looking for 250 ids from input info
      check time: 0.002
      vsearch/swarm time: 0.566
      total time: 22.272
