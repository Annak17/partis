import os
import glob
import sys
from SCons.Script import Command, Depends

env = Environment(ENV=os.environ, SHELL='/bin/bash')
sys.path.append(os.getenv('HOME') + '/bin')

cmd = './runpart.py'
datadir = 'data/imgt'
parameter_dir = 'caches/performance/test/simu/hmm_parameters'
dummy_plotdir = '/tmp/' + os.path.basename(os.getenv('HOME')) + '/dummy-plots'

testoutdir = 'caches/performance/test'
if not os.path.exists('../' + testoutdir):
    os.makedirs('../' + testoutdir)

tests = {
    # for the time being skip the simulation step and use a cached simu file
    'cache-and-plot-performance' : './plotperformance.py --label test --datadir ' + datadir + ' --skip-simulation --simfname test/data/regression/simu.csv --plotdir ' + testoutdir + '/plots',
    'single-point-estimate' : cmd +  ' --point-estimate --datadir ' + datadir + ' --seqfile test/data/regression/simu.csv --parameter-dir ' + parameter_dir + ' --n-max-queries 1 --debug 1',
    'partition-a-few' : cmd +  ' --partition --pair --datadir ' + datadir + ' --seqfile test/data/regression/simu.csv --parameter-dir ' + parameter_dir + ' --n-max-queries 8 --debug 1',
    'viterbi-pair' : cmd +  ' --point-estimate --pair --datadir ' + datadir + ' --seqfile test/data/regression/chopped-simu.csv --parameter-dir ' + parameter_dir + ' --debug 1',
}

all_passed = '_results/ALL.passed'
individual_passed = ['_results/{}.passed'.format(name) for name in tests.keys()]

for path in individual_passed + [all_passed]:
    if os.path.exists(path):
        os.remove(path)

for name, test_cmd in tests.items():
    out = '_results/%s.out' % name
    Depends(out, [glob.glob('../python/*.py'), '../packages/ham/bcrham'])
    if name == 'cache-and-plot-performance':
        env.Command(out, '../' + cmd, test_cmd + ' && touch $TARGET')
        Command('_results/%s.passed' % name,
                ['data/regression/parameters', '../' + testoutdir, out],
                'diff -qr  -x\'*.svg\' -x params ${SOURCES[0]} ${SOURCES[1]} && touch $TARGET')
    else:
        env.Command(out, '../' + cmd, test_cmd + ' --outfname $TARGET')
        # touch a sentinel `passed` file if we get what we expect
        Command('_results/%s.passed' % name,
                [out, 'data/regression/%s.out' % name],
                'diff ${SOURCES[0]} ${SOURCES[1]} && touch $TARGET')

# Set up sentinel dependency of all passed on the individual_passed sentinels.
Command(all_passed,
        individual_passed,
        'cat $SOURCES > $TARGET')
