import os
import glob
import sys
from SCons.Script import Command, Depends

env = Environment(ENV = os.environ)
print env['ENV']['PATH']

sys.path.append(os.getenv('HOME') + '/bin')

cmd = './runpart.py'
parameter_dir = 'caches/test-parameters'
data_test_file = 'test/every-hundredth-data.tsv.bz2'
simu_test_file = 'test/simu.csv'
tests = {
    'cache-parameters' : [cmd, '--cache_parameters', '--seqfile', data_test_file, '--is_data', '--parameter_dir', parameter_dir, '--plotdir', '/tmp/' + os.path.basename(os.getenv('HOME')) + '/parameter-cache-plots', '--n_procs', '10', '--skip_unproductive', '--n_max_queries', '1000'],
    'single-point-estimate' : [ cmd, '--point_estimate', '--seqfile', simu_test_file, '--parameter_dir', parameter_dir + '/hmm_parameters', '--n_max_queries', '1', '--debug', '1'],
    'partition-a-few' : [cmd, '--partition', '--pair', '--seqfile', simu_test_file, '--parameter_dir', parameter_dir + '/hmm_parameters', '--n_procs', '10', '--n_max_per_region', '2'],
    'viterbi-pair' : [cmd, '--point_estimate', '--pair', '--seqfile', simu_test_file, '--parameter_dir', parameter_dir + '/hmm_parameters', '--debug', '1', '--queries', '\' -2996237710674838049:1722533587157826946:1516698783101435629\'']
}

all_passed = '_results/ALL.passed'
individual_passed = ['_results/{}.passed'.format(name) for name in tests.keys()]

for path in individual_passed + [all_passed]:
    if os.path.exists(path):
        os.remove(path)

for name, test in tests.items():
    out = '_results/%s.out' % name
    env.Command(out, '../' + cmd, ' '.join(test) + ' --outfname $TARGET')
    Depends(out, [glob.glob('../python/*.py'), '../packages/ham/ham'])
    # touch a sentinel `passed` file if we get what we expect
    Command('_results/%s.passed' % name,
            [out, 'data/regression/%s.out' % name],
            'diff ${SOURCES[0]} ${SOURCES[1]} && touch $TARGET')

# Set up sentinel dependency of all passed on the individual_passed sentinels.
Command(all_passed,
        individual_passed,
        'cat $SOURCES > $TARGET')
