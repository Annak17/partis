import os
import sys
import glob

env = Environment()
env.Append(CPPFLAGS = ['-g', '-O0', '-Wall', '-std=c++0x'])
env.Append(LINKFLAGS = ['-g', '-O0', '-std=c++0x'])
env.Append(CPPPATH = ['../include'])
env.Append(CPPDEFINES={'STATE_MAX':'1024', 'SIZE_MAX':'\(\(size_t\)-1\)', 'UINT16_MAX':'65535', 'PI':'3.1415926535897932', 'EPS':'1e-6'})  # TODO reduce the state max to something reasonable?

binary_names = ['ham', 'hample']

sources = []
for fname in glob.glob(os.getenv('PWD') + '/src/*.cc'):
    for bname in binary_names:
        if bname not in fname:
            sources.append(fname)

env.Library(target='ham', source=sources)

for bname in binary_names:
    env.Program(target='../' + bname, source=bname + '.cc', LIBS=['ham', 'yaml-cpp'], LIBPATH=['.', 'yaml-cpp'])
